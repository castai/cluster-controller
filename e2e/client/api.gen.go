// Package client provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package client

import (
	"encoding/json"
	"fmt"
	"time"
)

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason.
const (
	CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReasonAlreadyRebalancing         CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason = "AlreadyRebalancing"
	CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReasonInvalid                    CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason = "Invalid"
	CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReasonProblematicWorkloads       CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason = "ProblematicWorkloads"
	CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReasonRebalancingNodeDrainFailed CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason = "RebalancingNodeDrainFailed"
)

// Defines values for CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator.
const (
	CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperatorDoesNotExist CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator = "DoesNotExist"
	CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperatorExists       CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator = "Exists"
	CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperatorIn           CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator = "In"
	CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperatorInvalid      CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator = "Invalid"
	CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperatorNotIn        CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator = "NotIn"
)

// Defines values for CastaiAutoscalerV1beta1Os.
const (
	CastaiAutoscalerV1beta1OsLinux   CastaiAutoscalerV1beta1Os = "linux"
	CastaiAutoscalerV1beta1OsUnknown CastaiAutoscalerV1beta1Os = "unknown"
	CastaiAutoscalerV1beta1OsWindows CastaiAutoscalerV1beta1Os = "windows"
)

// Defines values for CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType.
const (
	CastaiAutoscalerV1beta1RebalancingPlanResponseOperationTypeCreateNode  CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType = "create_node"
	CastaiAutoscalerV1beta1RebalancingPlanResponseOperationTypeDeleteNode  CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType = "delete_node"
	CastaiAutoscalerV1beta1RebalancingPlanResponseOperationTypeDrainNode   CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType = "drain_node"
	CastaiAutoscalerV1beta1RebalancingPlanResponseOperationTypeInvalid     CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType = "invalid"
	CastaiAutoscalerV1beta1RebalancingPlanResponseOperationTypePrepareNode CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType = "prepare_node"
)

// Defines values for CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason.
const (
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonAchievedSavingsBelowThreshold   CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "achievedSavingsBelowThreshold"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonInvalid                         CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "invalid"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonNodeCreateFailed                CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "nodeCreateFailed"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonNodeDeleteFailed                CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "nodeDeleteFailed"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonNodeDrainFailed                 CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "nodeDrainFailed"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonNodePrepareFailed               CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "nodePrepareFailed"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonRebalancingPlanGenerationFailed CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "rebalancingPlanGenerationFailed"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonRebalancingPlanTimeout          CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "rebalancingPlanTimeout"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonUnknown                         CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "unknown"
	CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReasonUpscalingFailed                 CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason = "upscalingFailed"
)

// Defines values for CastaiAutoscalerV1beta1Status.
const (
	CastaiAutoscalerV1beta1StatusCreatingNodes     CastaiAutoscalerV1beta1Status = "creating_nodes"
	CastaiAutoscalerV1beta1StatusDeletingNodes     CastaiAutoscalerV1beta1Status = "deleting_nodes"
	CastaiAutoscalerV1beta1StatusDrainingNodes     CastaiAutoscalerV1beta1Status = "draining_nodes"
	CastaiAutoscalerV1beta1StatusError             CastaiAutoscalerV1beta1Status = "error"
	CastaiAutoscalerV1beta1StatusFinished          CastaiAutoscalerV1beta1Status = "finished"
	CastaiAutoscalerV1beta1StatusGenerated         CastaiAutoscalerV1beta1Status = "generated"
	CastaiAutoscalerV1beta1StatusGenerating        CastaiAutoscalerV1beta1Status = "generating"
	CastaiAutoscalerV1beta1StatusInvalid           CastaiAutoscalerV1beta1Status = "invalid"
	CastaiAutoscalerV1beta1StatusPartiallyFinished CastaiAutoscalerV1beta1Status = "partially_finished"
	CastaiAutoscalerV1beta1StatusPreparingNodes    CastaiAutoscalerV1beta1Status = "preparing_nodes"
)

// Defines values for CastaiFeaturesV1EntityType.
const (
	ClusterId      CastaiFeaturesV1EntityType = "clusterId"
	Environment    CastaiFeaturesV1EntityType = "environment"
	OrganizationId CastaiFeaturesV1EntityType = "organizationId"
	UserId         CastaiFeaturesV1EntityType = "userId"
)

// Defines values for CastaiFeaturesV1LogicalOperator.
const (
	And                CastaiFeaturesV1LogicalOperator = "and"
	LogicalUnspecified CastaiFeaturesV1LogicalOperator = "logical_unspecified"
	Or                 CastaiFeaturesV1LogicalOperator = "or"
)

// Defines values for CastaiFeaturesV1Operator.
const (
	Equals              CastaiFeaturesV1Operator = "equals"
	NotEquals           CastaiFeaturesV1Operator = "not_equals"
	OperatorUnspecified CastaiFeaturesV1Operator = "operator_unspecified"
)

// Defines values for ExternalclusterV1ClusterReconcileInfoReconcileMode.
const (
	Disabled    ExternalclusterV1ClusterReconcileInfoReconcileMode = "disabled"
	Enabled     ExternalclusterV1ClusterReconcileInfoReconcileMode = "enabled"
	Paused      ExternalclusterV1ClusterReconcileInfoReconcileMode = "paused"
	Unspecified ExternalclusterV1ClusterReconcileInfoReconcileMode = "unspecified"
)

// Defines values for ExternalclusterV1ClusterReconcileInfoReconcileStatus.
const (
	Failed  ExternalclusterV1ClusterReconcileInfoReconcileStatus = "failed"
	Ok      ExternalclusterV1ClusterReconcileInfoReconcileStatus = "ok"
	Unknown ExternalclusterV1ClusterReconcileInfoReconcileStatus = "unknown"
	Warning ExternalclusterV1ClusterReconcileInfoReconcileStatus = "warning"
)

// Defines values for ExternalclusterV1NodeType.
const (
	Master          ExternalclusterV1NodeType = "master"
	NODETYPEINVALID ExternalclusterV1NodeType = "NODE_TYPE_INVALID"
	NODETYPEMASTER  ExternalclusterV1NodeType = "NODE_TYPE_MASTER"
	NODETYPEWORKER  ExternalclusterV1NodeType = "NODE_TYPE_WORKER"
	Worker          ExternalclusterV1NodeType = "worker"
)

// Defines values for K8sSelectorV1Operator.
const (
	DoesNotExist  K8sSelectorV1Operator = "DoesNotExist"
	DoesNotExist1 K8sSelectorV1Operator = "doesNotExist"
	Exists        K8sSelectorV1Operator = "Exists"
	Exists1       K8sSelectorV1Operator = "exists"
	Gt            K8sSelectorV1Operator = "Gt"
	Gt1           K8sSelectorV1Operator = "gt"
	IN            K8sSelectorV1Operator = "IN"
	In            K8sSelectorV1Operator = "in"
	Lt            K8sSelectorV1Operator = "Lt"
	Lt1           K8sSelectorV1Operator = "lt"
	NotIn         K8sSelectorV1Operator = "NotIn"
	NotIn1        K8sSelectorV1Operator = "notIn"
)

// Defines the cluster rebalance request.
type AutoscalerAPIGenerateRebalancingPlanRequest struct {
	// When enabled will also consider rebalancing problematic pods (pods without controller, job pods, pods with removal-disabled annotation).
	//
	// Deprecated: use AggressiveModeConfig instead.
	// We still honor the behavior of this legacy option, but this field will be removed at some point in the future.
	AggressiveMode       *bool                                        `json:"aggressiveMode"`
	AggressiveModeConfig *CastaiAutoscalerV1beta1AggressiveModeConfig `json:"aggressiveModeConfig,omitempty"`

	// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a
	// rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
	EvictGracefully *bool `json:"evictGracefully"`

	// Defines the conditions which must be met in order to fully execute the plan.
	ExecutionConditions   *CastaiAutoscalerV1beta1ExecutionConditions `json:"executionConditions,omitempty"`
	KeepDrainTimeoutNodes *bool                                       `json:"keepDrainTimeoutNodes"`

	// Minimum number of nodes that the cluster should have after rebalancing is done.
	MinNodes *int32 `json:"minNodes,omitempty"`

	// Defines configuration of a paused draining feature. Requires feature flag to be enabled.
	PausedDrainConfig *CastaiAutoscalerV1beta1PausedDrainConfig `json:"pausedDrainConfig,omitempty"`

	// Subset of nodes to rebalance. If empty, it is considered to include all nodes (full rebalancing).
	RebalancingNodes *[]CastaiAutoscalerV1beta1RebalancingNode `json:"rebalancingNodes,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	// in case the error is related to specific field, this list will contain
	FieldViolations []FieldViolation `json:"fieldViolations"`
	Message         string           `json:"message"`
}

// ExternalClusterAPIGCPCreateSARequest defines model for ExternalClusterAPI_GCPCreateSA_request.
type ExternalClusterAPIGCPCreateSARequest struct {
	// AKSClusterParams is a placeholder for future use.
	Aks *ExternalclusterV1GCPCreateSARequestAKSClusterParams `json:"aks,omitempty"`

	// UpdateGKEClusterParams defines updatable GKE cluster configuration.
	Gke *ExternalclusterV1UpdateGKEClusterParams `json:"gke,omitempty"`
}

// ExternalClusterAPIGKECreateSARequest defines model for ExternalClusterAPI_GKECreateSA_request.
type ExternalClusterAPIGKECreateSARequest struct {
	// UpdateGKEClusterParams defines updatable GKE cluster configuration.
	Gke *ExternalclusterV1UpdateGKEClusterParams `json:"gke,omitempty"`
}

// FieldViolation defines model for FieldViolation.
type FieldViolation struct {
	Description string `json:"description"`
	Field       string `json:"field"`
}

// Auth token used to authenticate via api.
type CastaiAuthtokenV1beta1AuthToken struct {
	// (read only) Indicates whether the token is active.
	Active *bool `json:"active,omitempty"`

	// (read only) Time when the token was created (unix timestamp in nanoseconds).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// created_by is used to link this token to a user who created it.
	CreatedBy *string `json:"createdBy"`

	// Time when the token will expire (unix timestamp in nanoseconds).
	// A null value means that the key will never expire.
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`

	// (read only) ID of the token.
	Id *string `json:"id,omitempty"`

	// (read only) Time when this token was last used (unix timestamp in nanoseconds).
	LastUsedAt *time.Time `json:"lastUsedAt,omitempty"`

	// (required) User provided name of the token.
	Name string `json:"name"`

	// TODO: we need to think how to migrate away from this flag.
	// whether token has readonly permissions.
	Readonly bool `json:"readonly"`

	// (read only, visible once on creation) actual token used to authenticate via api.
	Token *string `json:"token"`

	// token_prefix contains the first 3 characters of the generated token.
	TokenPrefix *string `json:"tokenPrefix"`
}

// AuthTokenUpdate is used to update an existing auth token.
type CastaiAuthtokenV1beta1AuthTokenUpdate struct {
	Active *bool `json:"active,omitempty"`
}

// CastaiAuthtokenV1beta1DeleteAuthTokenResponse defines model for castai.authtoken.v1beta1.DeleteAuthTokenResponse.
type CastaiAuthtokenV1beta1DeleteAuthTokenResponse = map[string]interface{}

// CastaiAuthtokenV1beta1ListAuthTokensResponse defines model for castai.authtoken.v1beta1.ListAuthTokensResponse.
type CastaiAuthtokenV1beta1ListAuthTokensResponse struct {
	Items *[]CastaiAuthtokenV1beta1AuthToken `json:"items,omitempty"`
}

// CastaiAutoscalerV1beta1AWSNodeTemplateMigrationIntent defines model for castai.autoscaler.v1beta1.AWSNodeTemplateMigrationIntent.
type CastaiAutoscalerV1beta1AWSNodeTemplateMigrationIntent struct {
	// Indicates whether the AWSNodeTemplate can be migrated.
	CanMigrate *bool `json:"canMigrate,omitempty"`

	// The name given to the CAST AI Node Configuration after migration.
	CastaiNodeConfigurationName *string `json:"castaiNodeConfigurationName,omitempty"`

	// Error describing why AWSNodeTemplate migration cannot be performed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why AWSNodeTemplate migration cannot be performed or won't be performed fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter AWSNodeTemplate name.
	Name *string `json:"name,omitempty"`

	// Indicates whether AWSNodeTemplate migration intent can be executed.
	// Deprecated: Use can_migrate instead.
	Valid *bool `json:"valid,omitempty"`
}

// CastaiAutoscalerV1beta1AWSNodeTemplateMigrationResult defines model for castai.autoscaler.v1beta1.AWSNodeTemplateMigrationResult.
type CastaiAutoscalerV1beta1AWSNodeTemplateMigrationResult struct {
	// The id of the CAST AI Node Configuration.
	CastaiNodeConfigurationId *string `json:"castaiNodeConfigurationId,omitempty"`

	// The name of the CAST AI Node Configuration.
	CastaiNodeConfigurationName *string `json:"castaiNodeConfigurationName,omitempty"`

	// Error describing why AWSNodeTemplate migration failed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why AWSNodeTemplate migration failed or couldn't complete fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter AWSNodeTemplate name.
	Name *string `json:"name,omitempty"`

	// Indicates whether AWSNodeTemplate migration was successful.
	Success *bool `json:"success,omitempty"`
}

// CastaiAutoscalerV1beta1AggressiveModeConfig defines model for castai.autoscaler.v1beta1.AggressiveModeConfig.
type CastaiAutoscalerV1beta1AggressiveModeConfig struct {
	// Rebalance workloads that use local-path Persistent Volumes.
	// WARNING: THIS WILL RESULT IN DATA LOSS.
	IgnoreLocalPersistentVolumes *bool `json:"ignoreLocalPersistentVolumes,omitempty"`

	// Pods spawned by Jobs or CronJobs will not prevent the Rebalancer from deleting a node on which they run.
	// WARNING: When true, pods spawned by Jobs or CronJobs will be terminated if the Rebalancer picks a node that runs them.
	// As such, they are likely to lose their progress.
	IgnoreProblemJobPods *bool `json:"ignoreProblemJobPods,omitempty"`

	// Pods that don't have a controller (bare pods) will not prevent the Rebalancer from deleting a node on which they run.
	// WARNING: When true, such pods might not restart, since they have no controller to do it.
	IgnoreProblemPodsWithoutController *bool `json:"ignoreProblemPodsWithoutController,omitempty"`

	// Pods that are marked with "removal disabled" will not prevent the Rebalancer from deleting a node on which they run.
	// WARNING: When true, such pods will be evicted and disrupted.
	IgnoreProblemRemovalDisabledPods *bool `json:"ignoreProblemRemovalDisabledPods,omitempty"`
}

// CastaiAutoscalerV1beta1EC2NodeClassMigrationIntent defines model for castai.autoscaler.v1beta1.EC2NodeClassMigrationIntent.
type CastaiAutoscalerV1beta1EC2NodeClassMigrationIntent struct {
	// Indicates whether the EC2NodeClass can be migrated.
	CanMigrate *bool `json:"canMigrate,omitempty"`

	// The name given to the CAST AI Node Configuration after migration.
	CastaiNodeConfigurationName *string `json:"castaiNodeConfigurationName,omitempty"`

	// Error describing why EC2NodeClass migration cannot be performed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why EC2NodeClass migration cannot be performed or won't be performed fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter EC2NodeClass name.
	Name *string `json:"name,omitempty"`

	// Indicates whether EC2NodeClass migration intent can be executed.
	// Deprecated: Use can_migrate instead.
	Valid *bool `json:"valid,omitempty"`
}

// CastaiAutoscalerV1beta1EC2NodeClassMigrationResult defines model for castai.autoscaler.v1beta1.EC2NodeClassMigrationResult.
type CastaiAutoscalerV1beta1EC2NodeClassMigrationResult struct {
	// The id of the CAST AI Node Configuration.
	CastaiNodeConfigurationId *string `json:"castaiNodeConfigurationId,omitempty"`

	// The name of the CAST AI Node Configuration.
	CastaiNodeConfigurationName *string `json:"castaiNodeConfigurationName,omitempty"`

	// Error describing why EC2NodeClass migration failed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why EC2NodeClass migration failed or couldn't complete fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter EC2NodeClass name.
	Name *string `json:"name,omitempty"`

	// Indicates whether EC2NodeClass migration was successful.
	Success *bool `json:"success,omitempty"`
}

// Defines the conditions which must be met in order to fully execute the plan.
type CastaiAutoscalerV1beta1ExecutionConditions struct {
	// Identifies the minimum percentage of predicted savings that should be achieved.
	// The rebalancing plan will not proceed after creating the nodes if the achieved savings percentage
	// is not achieved.
	// This field's value will not be considered if the initially predicted savings are negative.
	AchievedSavingsPercentage *int32 `json:"achievedSavingsPercentage,omitempty"`
	Enabled                   *bool  `json:"enabled,omitempty"`
}

// Defines the cluster rebalance response.
type CastaiAutoscalerV1beta1GenerateRebalancingPlanResponse struct {
	// ID of the rebalancing plan.
	RebalancingPlanId *string `json:"rebalancingPlanId,omitempty"`
}

// Defines the cluster settings response.
type CastaiAutoscalerV1beta1GetClusterSettingsResponse struct {
	// Return cluster agent version.
	AgentVersion *string `json:"agentVersion,omitempty"`

	// Is ARM64 supported.
	Arm64Supported bool `json:"arm64Supported"`

	// Is default node template enabled.
	EnableDefaultNodeTemplate bool `json:"enableDefaultNodeTemplate"`

	// Evictor maximum target nodes.
	EvictorMaxTargetNodes *int32 `json:"evictorMaxTargetNodes"`

	// Desired cluster evictor version.
	EvictorVersion string `json:"evictorVersion"`

	// The threshold for minimal number of available IPs in a subnet to be considered for subnet spread.
	IpThresholdSubnetSpread *int32 `json:"ipThresholdSubnetSpread"`

	// Indicates whether Karpenter is installed in the cluster.
	KarpenterInstalled bool `json:"karpenterInstalled"`

	// The version of Karpenter installed in the cluster. May be empty if Karpenter is not installed.
	KarpenterVersion *string `json:"karpenterVersion"`

	// Price threshold zone spread.
	PriceThresholdZoneSpread *float64 `json:"priceThresholdZoneSpread"`

	// Is reservations support enabled.
	ReservationsEnabled bool `json:"reservationsEnabled"`

	// Is autoscaling of Windows nodes enabled.
	WindowsAutoscalingEnabled *bool `json:"windowsAutoscalingEnabled,omitempty"`
}

// Defines the cluster workloads response.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponse struct {
	// ID of the cluster that is being rebalanced.
	ClusterId *string `json:"clusterId,omitempty"`

	// A list of workloads.
	Workloads *[]CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkload `json:"workloads,omitempty"`
}

// Defines a cluster workload.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkload struct {
	// Defines the cost impact of rebalancing a workload.
	CostImpact *CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadCostImpact `json:"costImpact,omitempty"`

	// A list of workload issues.
	Issues *[]CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadIssue `json:"issues,omitempty"`

	// Total memory capacity of this workload in MiBs.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Total milli CPU capacity of this workload.
	MilliCpu *int32 `json:"milliCpu,omitempty"`

	// Workload name.
	Name *string `json:"name,omitempty"`

	// Workload namespace.
	Namespace *string `json:"namespace,omitempty"`

	// Nodes used by this workload.
	Nodes *[]CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNode `json:"nodes,omitempty"`

	// Replicas count.
	Replicas *int32 `json:"replicas,omitempty"`

	// Kubernetes resource name.
	Resource *string                                                                   `json:"resource,omitempty"`
	Status   *CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadWorkloadStatus `json:"status,omitempty"`
}

// Defines the cost impact of rebalancing a workload.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadCostImpact struct {
	// Cost impact level.
	//
	// * `low` - low cost impact.
	// * `medium` - medium cost impact.
	// * `high` - high cost impact.
	Level *string `json:"level,omitempty"`

	// Numeric cost impact value.
	Value *int32 `json:"value,omitempty"`
}

// Defines the workload rebalancing issue.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadIssue struct {
	Description *string `json:"description,omitempty"`

	// Issue kind.
	Kind *string `json:"kind,omitempty"`
}

// Defines a workload node.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNode struct {
	// Node id.
	Id *string `json:"id,omitempty"`

	// Node name.
	Name *string `json:"name,omitempty"`

	// Defines node specifications.
	Specs *CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeSpecifications `json:"specs,omitempty"`

	// Defines the migration status.
	Status *CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNodeStatus `json:"status,omitempty"`

	// Pods count in node.
	TotalPods *int32 `json:"totalPods,omitempty"`

	// Problematic pods count in node.
	TotalProblematicPods *int32 `json:"totalProblematicPods,omitempty"`

	// How many of this workload replicas exist on this particular node.
	WorkloadReplicas *int32 `json:"workloadReplicas,omitempty"`
}

// Defines the migration status.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNodeStatus struct {
	// Migration status.
	//
	// * `ready` - node is ready to be rebalanced.
	// * `not-ready` - node is not ready to be rebalanced.
	MigrationStatus *string `json:"migrationStatus,omitempty"`

	// Defines the reason for the node to be considered as not ready.
	Reason *CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason `json:"reason,omitempty"`
}

// Defines the reason for the node to be considered as not ready.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeNotReadyStatusReason string

// Defines node specifications.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadNodeSpecifications struct {
	// Instance type of this node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Total memory capacity of this node in MiBs.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Total milli CPU capacity of this node.
	MilliCpu *int32 `json:"milliCpu,omitempty"`
}

// CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadWorkloadStatus defines model for castai.autoscaler.v1beta1.GetClusterWorkloadsResponse.Workload.WorkloadStatus.
type CastaiAutoscalerV1beta1GetClusterWorkloadsResponseWorkloadWorkloadStatus struct {
	// * `ready` - the workload can be rebalanced.
	// * `not-ready` - the workload cannot be rebalanced.
	MigrationStatus *string `json:"migrationStatus,omitempty"`
}

// CastaiAutoscalerV1beta1GetKarpenterMigrationIntentResponse defines model for castai.autoscaler.v1beta1.GetKarpenterMigrationIntentResponse.
type CastaiAutoscalerV1beta1GetKarpenterMigrationIntentResponse struct {
	AwsNodeTemplates *[]CastaiAutoscalerV1beta1AWSNodeTemplateMigrationIntent `json:"awsNodeTemplates,omitempty"`
	Ec2NodeClasses   *[]CastaiAutoscalerV1beta1EC2NodeClassMigrationIntent    `json:"ec2NodeClasses,omitempty"`
	NodePools        *[]CastaiAutoscalerV1beta1NodePoolMigrationIntent        `json:"nodePools,omitempty"`
	Provisioners     *[]CastaiAutoscalerV1beta1ProvisionerMigrationIntent     `json:"provisioners,omitempty"`
}

// Defines the requests for getting problematic nodes for a specific cluster.
type CastaiAutoscalerV1beta1GetProblematicNodesResponse struct {
	// The id of the cluster.
	ClusterId *string `json:"clusterId,omitempty"`

	// Identifies whether cluster contains any problems.
	HasProblems *bool `json:"hasProblems,omitempty"`

	// Problematic nodes.
	Nodes *[]CastaiAutoscalerV1beta1GetProblematicNodesResponseNode `json:"nodes,omitempty"`
}

// Defines a problematic node.
type CastaiAutoscalerV1beta1GetProblematicNodesResponseNode struct {
	// Name of the node.
	Name *string `json:"name,omitempty"`

	// ID of the node.
	NodeId *string `json:"nodeId,omitempty"`

	// List of controller problems.
	Problems *[]string `json:"problems,omitempty"`
}

// Defines the requests for getting problematic workloads for a specific cluster.
type CastaiAutoscalerV1beta1GetProblematicWorkloadsResponse struct {
	// The id of the cluster.
	ClusterId *string `json:"clusterId,omitempty"`

	// Problematic workload controllers.
	Controllers *[]CastaiAutoscalerV1beta1GetProblematicWorkloadsResponseController `json:"controllers,omitempty"`

	// Identifies whether cluster contains any problems.
	HasProblems *bool `json:"hasProblems,omitempty"`

	// Problematic standalone pods.
	StandalonePods *[]CastaiAutoscalerV1beta1GetProblematicWorkloadsResponseStandalonePod `json:"standalonePods,omitempty"`
}

// Defines a problematic workloads controller.
type CastaiAutoscalerV1beta1GetProblematicWorkloadsResponseController struct {
	// Kind of the controller.
	Kind *string `json:"kind,omitempty"`

	// Name of the controller.
	Name *string `json:"name,omitempty"`

	// List of controller problems.
	Problems *[]string `json:"problems,omitempty"`
}

// Defines a problematic standalone pod.
type CastaiAutoscalerV1beta1GetProblematicWorkloadsResponseStandalonePod struct {
	// Name of the pod.
	Name *string `json:"name,omitempty"`

	// List of pod problems.
	Problems *[]string `json:"problems,omitempty"`
}

// Defines the rebalanced workloads response.
type CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponse struct {
	// Whether rebalancing is active or not.
	IsActive *bool `json:"isActive,omitempty"`

	// Label selectors matching workloads which are being rebalanced.
	Selectors *[]CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector `json:"selectors,omitempty"`
}

// Selector is a proto mirror of the metav1.LabelSelector K8s API object. Properties `match_labels` and
// `match_expressions` are ANDed.
type CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector struct {
	// A more advanced label query with operators. Multiple expressions are ANDed.
	MatchExpressions *[]CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpression `json:"matchExpressions,omitempty"`

	// Used to query resource labels.
	MatchLabels *CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels `json:"matchLabels,omitempty"`
}

// Used to query resource labels.
type CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Expression is a proto mirror of the metav1.LabelSelectorRequirement K8s API object.
type CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpression struct {
	// Key is a label.
	Key *string `json:"key,omitempty"`

	// A set of operators which can be used in the label selector expressions.
	Operator *CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator `json:"operator,omitempty"`

	// Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the
	// operator is Exists or DoesNotExist, the values array must be empty.
	Values *[]string `json:"values,omitempty"`
}

// A set of operators which can be used in the label selector expressions.
type CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelectorExpressionOperator string

// Defines list cluster rebalancing plans response.
type CastaiAutoscalerV1beta1ListRebalancingPlansResponse struct {
	Items      *[]CastaiAutoscalerV1beta1RebalancingPlanResponse `json:"items,omitempty"`
	NextCursor *string                                           `json:"nextCursor,omitempty"`
}

// CastaiAutoscalerV1beta1MigrateKarpenterDefinitionsResponse defines model for castai.autoscaler.v1beta1.MigrateKarpenterDefinitionsResponse.
type CastaiAutoscalerV1beta1MigrateKarpenterDefinitionsResponse struct {
	AwsNodeTemplates *[]CastaiAutoscalerV1beta1AWSNodeTemplateMigrationResult `json:"awsNodeTemplates,omitempty"`
	Ec2NodeClasses   *[]CastaiAutoscalerV1beta1EC2NodeClassMigrationResult    `json:"ec2NodeClasses,omitempty"`
	NodePools        *[]CastaiAutoscalerV1beta1NodePoolMigrationResult        `json:"nodePools,omitempty"`
	Provisioners     *[]CastaiAutoscalerV1beta1ProvisionerMigrationResult     `json:"provisioners,omitempty"`
}

// CastaiAutoscalerV1beta1NodePoolMigrationIntent defines model for castai.autoscaler.v1beta1.NodePoolMigrationIntent.
type CastaiAutoscalerV1beta1NodePoolMigrationIntent struct {
	// Indicates whether the NodePool can be migrated.
	CanMigrate *bool `json:"canMigrate,omitempty"`

	// The name given to the CAST AI Node Template after migration.
	CastaiNodeTemplateName *string `json:"castaiNodeTemplateName,omitempty"`

	// Karpenter's EC2NodeClass name that this NodePool is referencing.
	Ec2NodeClassName *string `json:"ec2NodeClassName,omitempty"`

	// Error describing why NodePool migration cannot be performed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why NodePool migration cannot be performed or won't be performed fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter NodePool name.
	Name *string `json:"name,omitempty"`

	// Indicates whether NodePool migration intent can be executed.
	// Deprecated: Use can_migrate instead.
	Valid *bool `json:"valid,omitempty"`
}

// CastaiAutoscalerV1beta1NodePoolMigrationResult defines model for castai.autoscaler.v1beta1.NodePoolMigrationResult.
type CastaiAutoscalerV1beta1NodePoolMigrationResult struct {
	// The id of the CAST AI Node Template.
	CastaiNodeTemplateId *string `json:"castaiNodeTemplateId,omitempty"`

	// The name of the CAST AI Node Template.
	CastaiNodeTemplateName *string `json:"castaiNodeTemplateName,omitempty"`

	// Karpenter's EC2NodeClass name that this NodePool is referencing.
	Ec2NodeClassName *string `json:"ec2NodeClassName,omitempty"`

	// Error describing why NodePool migration failed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why NodePool migration failed or couldn't complete fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter NodePool name.
	Name *string `json:"name,omitempty"`

	// Indicates whether NodePool migration was successful.
	Success *bool `json:"success,omitempty"`
}

// CastaiAutoscalerV1beta1Os defines model for castai.autoscaler.v1beta1.Os.
type CastaiAutoscalerV1beta1Os string

// Defines configuration of a paused draining feature. Requires feature flag to be enabled.
type CastaiAutoscalerV1beta1PausedDrainConfig struct {
	Enabled *bool `json:"enabled,omitempty"`

	// Maximum time in seconds for which nodes will stay cordoned during paused draining phase.
	// After that time, nodes will be automatically uncordoned by the Autoscaler's node deletion policy (if enabled).
	TimeoutSeconds *int32 `json:"timeoutSeconds"`
}

// CastaiAutoscalerV1beta1ProvisionerMigrationIntent defines model for castai.autoscaler.v1beta1.ProvisionerMigrationIntent.
type CastaiAutoscalerV1beta1ProvisionerMigrationIntent struct {
	// Karpenter's AWSNodeTemplate name that this Provisioner is referencing.
	AwsNodeTemplateName *string `json:"awsNodeTemplateName,omitempty"`

	// Indicates whether the Provisioner can be migrated.
	CanMigrate *bool `json:"canMigrate,omitempty"`

	// The name given to the CAST AI Node Template after migration.
	CastaiNodeTemplateName *string `json:"castaiNodeTemplateName,omitempty"`

	// Error describing why Provisioner migration cannot be performed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why Provisioner migration cannot be performed or won't be performed fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter Provisioner name.
	Name *string `json:"name,omitempty"`

	// Indicates whether Provisioner migration intent can be executed.
	// Deprecated: Use can_migrate instead.
	Valid *bool `json:"valid,omitempty"`
}

// CastaiAutoscalerV1beta1ProvisionerMigrationResult defines model for castai.autoscaler.v1beta1.ProvisionerMigrationResult.
type CastaiAutoscalerV1beta1ProvisionerMigrationResult struct {
	// Karpenter's AWSNodeTemplate name that this Provisioner is referencing.
	AwsNodeTemplateName *string `json:"awsNodeTemplateName,omitempty"`

	// The id of the CAST AI Node Template.
	CastaiNodeTemplateId *string `json:"castaiNodeTemplateId,omitempty"`

	// The name of the CAST AI Node Template.
	CastaiNodeTemplateName *string `json:"castaiNodeTemplateName,omitempty"`

	// Error describing why Provisioner migration failed.
	// Deprecated: Use errors instead.
	Error *string `json:"error"`

	// Error messages describing why Provisioner migration failed or couldn't complete fully.
	ErrorMessages *[]string `json:"errorMessages,omitempty"`

	// Karpenter Provisioner name.
	Name *string `json:"name,omitempty"`

	// Indicates whether Provisioner migration was successful.
	Success *bool `json:"success,omitempty"`
}

// CastaiAutoscalerV1beta1RebalancingNode defines model for castai.autoscaler.v1beta1.RebalancingNode.
type CastaiAutoscalerV1beta1RebalancingNode struct {
	NodeId *string `json:"nodeId,omitempty"`
}

// Defines the cluster rebalancing plan response.
type CastaiAutoscalerV1beta1RebalancingPlanResponse struct {
	// When enabled will also consider rebalancing problematic pods (pods without controller, job pods, pods with removal-disabled annotation).
	//
	// Deprecated: use AggressiveModeConfig instead.
	AggressiveMode       *bool                                        `json:"aggressiveMode"`
	AggressiveModeConfig *CastaiAutoscalerV1beta1AggressiveModeConfig `json:"aggressiveModeConfig,omitempty"`

	// ID of the cluster that is being rebalanced.
	ClusterId *string `json:"clusterId,omitempty"`

	// Defines the cluster rebalancing plan configurations.
	Configurations *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurations `json:"configurations,omitempty"`

	// Timestamp of the rebalancing plan creation.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Timestamp of the rebalancing plan green node creation.
	CreatedNodesAt *time.Time `json:"createdNodesAt,omitempty"`

	// Timestamp of the rebalancing plan blue node deletion.
	DeletedNodesAt *time.Time `json:"deletedNodesAt,omitempty"`

	// Timestamp of the rebalancing plan blue node draining.
	DrainedNodesAt *time.Time `json:"drainedNodesAt,omitempty"`

	// Detailed error of rebalancing plan.
	Errors *[]CastaiAutoscalerV1beta1RebalancingPlanResponsePlanError `json:"errors,omitempty"`

	// During the drain & delete plan execution phase, if node eviction reaches a timeout, it will be deleted forcefully, terminating all workloads that failed to gracefully close on time.
	// When this option is enabled, such nodes will be kept for manual inspection and/or eventual automatic cleanup when node becomes empty.
	// Special annotation "rebalancing.cast.ai/status=drain-failed" will be added to these nodes.
	EvictGracefully *bool `json:"evictGracefully,omitempty"`

	// Defines the conditions which must be met in order to fully execute the plan.
	ExecutionConditions *CastaiAutoscalerV1beta1ExecutionConditions `json:"executionConditions,omitempty"`

	// Timestamp of the rebalancing plan finishing.
	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	// Timestamp of the rebalancing plan generation.
	GeneratedAt           *time.Time `json:"generatedAt,omitempty"`
	KeepDrainTimeoutNodes *bool      `json:"keepDrainTimeoutNodes,omitempty"`

	// Minimum count of worker nodes to be had in the rebalancing plan. Default is 3.
	MinNodes *int32 `json:"minNodes,omitempty"`

	// List of operations needed to execute this rebalancing plan. Documents the factual actions needed to be taken and/or
	// actions already done.
	Operations *[]CastaiAutoscalerV1beta1RebalancingPlanResponseOperation `json:"operations,omitempty"`

	// Defines configuration of a paused draining feature. Requires feature flag to be enabled.
	PausedDrainConfig *CastaiAutoscalerV1beta1PausedDrainConfig `json:"pausedDrainConfig,omitempty"`

	// Subset of the node IDs which were selected to rebalance. In case of full cluster rebalancing, this list
	// will be empty.
	RebalancingNodeIds *[]string `json:"rebalancingNodeIds,omitempty"`

	// ID of the rebalancing plan.
	RebalancingPlanId *string `json:"rebalancingPlanId,omitempty"`

	// Defines the schedule ID that triggered the creation of this rebalancing plan. Can be null if the rebalancing
	// plan didn't originate from a rebalancing schedule.
	ScheduleId *string `json:"scheduleId"`

	// Status of the rebalancing plan.
	//
	// * `generating` - the rebalancing plan is new and currently is being generated.
	// * `generated` - the rebalancing plan has been generated and can be previewed.
	// * `creating_nodes` - the rebalancing plan is being executed, green nodes are being created.
	// * `preparing_nodes` - the rebalancing plan is being executed, green nodes are being prepared.
	// * `draining_nodes` - the rebalancing plan is being executed, blue nodes are being drained.
	// * `deleting_nodes` - the rebalancing plan is being executed, blue nodes are being deleted.
	// * `finished` - the rebalancing plan has finished successfully.
	// * `partially_finished` - the rebalancing plan has partially finished. Used when graceful rebalancing is enabled.
	// * `error` - the rebalancing plan has failed.
	Status *CastaiAutoscalerV1beta1Status `json:"status,omitempty"`

	// Timestamp of the rebalancing plan triggering.
	TriggeredAt *time.Time `json:"triggeredAt,omitempty"`

	// Timestamp of the rebalancing plan last update.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Defines the cluster rebalancing plan configurations.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurations struct {
	// Contains affected and cluster node aggregated calculations.
	Achieved *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationTotals `json:"achieved,omitempty"`

	// Defines the difference between blue and green node configurations.
	AchievedDiff *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsDiff `json:"achievedDiff,omitempty"`

	// Defines a single rebalancing plan configuration.
	Blue *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfiguration `json:"blue,omitempty"`

	// Defines the difference between blue and green node configurations.
	Diff *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsDiff `json:"diff,omitempty"`

	// Defines a single rebalancing plan configuration.
	Green           *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfiguration   `json:"green,omitempty"`
	Recommendations *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsRecommendations `json:"recommendations,omitempty"`
}

// Defines a single rebalancing plan configuration.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfiguration struct {
	// Defines the totals of a single configuration.
	ClusterTotals *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsTotals `json:"clusterTotals,omitempty"`

	// A list of node in this configuration.
	Nodes *[]CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationNode `json:"nodes,omitempty"`

	// Defines the totals of a single configuration.
	Totals *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsTotals `json:"totals,omitempty"`
}

// Defines a single node in the configuration.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationNode struct {
	// Timestamp of the node creation date.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Node ID, if the node already exists.
	// Green nodes, to be created, won't have node_id.
	Id *string `json:"id"`

	// The instance type of this node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether this node is control plan node.
	IsControlPlane *bool `json:"isControlPlane,omitempty"`

	// Whether the node is legacy.
	IsLegacy *bool `json:"isLegacy,omitempty"`

	// Whether this node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether this node is a spot fallback.
	IsSpotFallback *bool `json:"isSpotFallback,omitempty"`

	// The provider name which managed this node.
	//
	// Possible types:
	// * `CASTAI` - the node is managed by CAST AI.
	// * `EKS` - the node is managed by the AWS EKS service.
	// * `GKE` - the node is managed by the GCP GKE service.
	// * `AKS` - the node is managed by the Azure AKS service.
	// * `KOPS` - the node is managed by the cluster manager tool kOps.
	ManagedBy *string `json:"managedBy,omitempty"`

	// Memory capacity of this node in MiBs.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Milli CPU capacity of this node.
	MilliCpu *int32 `json:"milliCpu,omitempty"`

	// Name of the node.
	Name *string                    `json:"name,omitempty"`
	Os   *CastaiAutoscalerV1beta1Os `json:"os,omitempty"`

	// The hourly price of this node in $ currency.
	PriceHourly *string `json:"priceHourly,omitempty"`

	// Defines a provisioned version of the node in the configuration.
	ProvisionedNode *CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationProvisionedNode `json:"provisionedNode,omitempty"`

	// Total number of pods in this node.
	TotalPods *int32 `json:"totalPods,omitempty"`

	// Total number of problematic pods in this node.
	TotalProblematicPods *int32 `json:"totalProblematicPods,omitempty"`
}

// Defines a provisioned version of the node in the configuration.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationProvisionedNode struct {
	// Timestamp of the node creation date.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The instance type of this node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether this node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether this node is a spot fallback.
	IsSpotFallback *bool `json:"isSpotFallback,omitempty"`

	// Memory capacity of this node in MiBs.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Milli CPU capacity of this node.
	MilliCpu *int32                     `json:"milliCpu,omitempty"`
	Os       *CastaiAutoscalerV1beta1Os `json:"os,omitempty"`

	// The hourly price of this node in $ currency.
	PriceHourly *string `json:"priceHourly,omitempty"`
}

// Contains affected and cluster node aggregated calculations.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsConfigurationTotals struct {
	// Defines the totals of a single configuration.
	AffectedNodeTotals CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsTotals `json:"affectedNodeTotals"`

	// Defines the totals of a single configuration.
	ClusterTotals CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsTotals `json:"clusterTotals"`
}

// Defines the difference between blue and green node configurations.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsDiff struct {
	// Saving percentage achieved by rebalancing the selected nodes for the whole cluster.
	ClusterSavingsPercentage *string `json:"clusterSavingsPercentage,omitempty"`

	// Hourly price difference between blue and green node configurations in $ currency.
	PriceHourly *string `json:"priceHourly,omitempty"`

	// Monthly price difference between blue and green node configurations in $ currency.
	PriceMonthly *string `json:"priceMonthly,omitempty"`

	// Savings percentage achieved by rebalancing the selected nodes.
	SavingsPercentage *string `json:"savingsPercentage,omitempty"`
}

// CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsRecommendations defines model for castai.autoscaler.v1beta1.RebalancingPlanResponse.Configurations.Recommendations.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsRecommendations struct {
	Applied *bool `json:"applied,omitempty"`
}

// Defines the totals of a single configuration.
type CastaiAutoscalerV1beta1RebalancingPlanResponseConfigurationsTotals struct {
	// Total memory capacity of this configuration in MiBs.
	MemoryMib *int32 `json:"memoryMib,omitempty"`

	// Count of pods which can be migrated. They come from replaceable nodes.
	MigratablePods *int32 `json:"migratablePods,omitempty"`

	// Total milli CPU capacity of this configuration.
	MilliCpu *int32 `json:"milliCpu,omitempty"`

	// Count of nodes in this configuration.
	Nodes *int32 `json:"nodes,omitempty"`

	// Total number of pods in this configuration.
	Pods *int32 `json:"pods,omitempty"`

	// Total hourly price of this configuration in $ currency.
	PriceHourly *string `json:"priceHourly,omitempty"`

	// Total monthly price of this configuration in $ currency.
	PriceMonthly *string `json:"priceMonthly,omitempty"`

	// Total number of problematic pods in this configuration.
	ProblematicPods *int32 `json:"problematicPods,omitempty"`

	// Count of nodes which can be replaced in this configuration.
	ReplaceableNodes *int32 `json:"replaceableNodes,omitempty"`
}

// Defines an actual action needed to be taken and/or already done.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperation struct {
	// Defines the parameters used for the `create_node` operation type.
	CreateParams *CastaiAutoscalerV1beta1RebalancingPlanResponseOperationCreateParams `json:"createParams,omitempty"`

	// Timestamp of the operation creation.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Defines the parameters for the `delete_node` operation type.
	DeleteParams *CastaiAutoscalerV1beta1RebalancingPlanResponseOperationDeleteParams `json:"deleteParams,omitempty"`

	// Defines the parameters for the `drain_node` operation type.
	DrainParams *CastaiAutoscalerV1beta1RebalancingPlanResponseOperationDrainParams `json:"drainParams,omitempty"`

	// Error value if the operation has finished with an error.
	Error *string `json:"error"`

	// Timestamp of the operation finish date. Only present when the operation has finished, either with an error or not.
	FinishedAt *time.Time `json:"finishedAt"`

	// The id of the operation.
	Id *string `json:"id,omitempty"`

	// The id of the node this operation will be executed on.
	NodeId *string `json:"nodeId"`

	// Defines the parameters for the `prepare_node` operation type.
	PrepareParams *CastaiAutoscalerV1beta1RebalancingPlanResponseOperationPrepareParams `json:"prepareParams,omitempty"`

	// Type of the operation.
	//
	// Possible types:
	// * `create_node` - a node will be created with specific `create` `params`.
	// * `prepare_node` - a node will be prepared with specific `prepared` `params`.
	// * `drain_node` - a node will be drained with specific `drain` `params`.
	// * `delete_node` - a node will be deleted with specific `delete` `params`.
	Type *CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType `json:"type,omitempty"`
}

// Defines the parameters used for the `create_node` operation type.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperationCreateParams struct {
	// The availability zone name of the created node. If empty - the AZ name will be random.
	AzName *string `json:"azName"`

	// The cloud service provider name.
	Csp *string `json:"csp,omitempty"`

	// The instance type of the created node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether the created node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether the node is a spot fallback.
	IsSpotFallback *bool `json:"isSpotFallback,omitempty"`

	// Node configuration ID to be used for the new node.
	NodeConfigurationId  *string  `json:"nodeConfigurationId,omitempty"`
	SpotReliabilityScore *float32 `json:"spotReliabilityScore"`

	// The subnet id of the created node. if empty - the subnet id will be random based on the availability zone.
	SubnetId *string `json:"subnetId"`

	// The volume size in GiB of the created node.
	VolumeSizeGib *int32 `json:"volumeSizeGib,omitempty"`
}

// Defines the parameters for the `delete_node` operation type.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperationDeleteParams struct {
	// The cloud service provider name.
	Csp *string `json:"csp,omitempty"`

	// The instance type of the node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether the node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether the node is a spot fallback.
	IsSpotFallback *bool `json:"isSpotFallback,omitempty"`
}

// Defines the parameters for the `drain_node` operation type.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperationDrainParams struct {
	// The cloud service provider name.
	Csp *string `json:"csp,omitempty"`

	// The drain timeout (default is 20m if not present).
	DrainTimeout *string `json:"drainTimeout"`

	// The instance type of the node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether the node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether the node is a spot fallback.
	IsSpotFallback *bool `json:"isSpotFallback,omitempty"`
}

// Defines the parameters for the `prepare_node` operation type.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperationPrepareParams struct {
	// The cloud service provider name.
	Csp *string `json:"csp,omitempty"`

	// The instance type of the node.
	InstanceType *string `json:"instanceType,omitempty"`

	// Whether the node is a spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Whether the node is a spot fallback.
	IsSpotFallback       *bool    `json:"isSpotFallback,omitempty"`
	SpotReliabilityScore *float32 `json:"spotReliabilityScore"`
}

// Type of the operation.
//
// Possible types:
// * `create_node` - a node will be created with specific `create` `params`.
// * `prepare_node` - a node will be prepared with specific `prepared` `params`.
// * `drain_node` - a node will be drained with specific `drain` `params`.
// * `delete_node` - a node will be deleted with specific `delete` `params`.
type CastaiAutoscalerV1beta1RebalancingPlanResponseOperationType string

// Detailed error.
type CastaiAutoscalerV1beta1RebalancingPlanResponsePlanError struct {
	// Detailed error message.
	Message *string `json:"message,omitempty"`

	// Node id.
	Node *string `json:"node"`

	// Pod name.
	Pod *string `json:"pod"`

	// Defines the reason why the rebalancing plan failed.
	//
	// * `rebalancing_plan_generation_failed` - the rebalancing plan generation failed.
	// * `upscaling_failed` - the upscaling of the cluster failed.
	// * `node_drain_failed` - the drain of a node failed.
	// * `node_create_failed` - the creation of a node failed.
	// * `node_prepare_failed` - the preparation of a node failed.
	// * `node_delete_failed` - the deletion of a node failed.
	// * `rebalancing_plan_timeout` - the rebalancing plan timed out.
	// * `achieved_savings_below_threshold` - the achieved savings are below the threshold.
	// * `unknown` - the reason is unknown.
	Reason *CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason `json:"reason,omitempty"`
}

// Defines the reason why the rebalancing plan failed.
//
// * `rebalancing_plan_generation_failed` - the rebalancing plan generation failed.
// * `upscaling_failed` - the upscaling of the cluster failed.
// * `node_drain_failed` - the drain of a node failed.
// * `node_create_failed` - the creation of a node failed.
// * `node_prepare_failed` - the preparation of a node failed.
// * `node_delete_failed` - the deletion of a node failed.
// * `rebalancing_plan_timeout` - the rebalancing plan timed out.
// * `achieved_savings_below_threshold` - the achieved savings are below the threshold.
// * `unknown` - the reason is unknown.
type CastaiAutoscalerV1beta1RebalancingPlanResponsePlanErrorReason string

// Status of the rebalancing plan.
//
// * `generating` - the rebalancing plan is new and currently is being generated.
// * `generated` - the rebalancing plan has been generated and can be previewed.
// * `creating_nodes` - the rebalancing plan is being executed, green nodes are being created.
// * `preparing_nodes` - the rebalancing plan is being executed, green nodes are being prepared.
// * `draining_nodes` - the rebalancing plan is being executed, blue nodes are being drained.
// * `deleting_nodes` - the rebalancing plan is being executed, blue nodes are being deleted.
// * `finished` - the rebalancing plan has finished successfully.
// * `partially_finished` - the rebalancing plan has partially finished. Used when graceful rebalancing is enabled.
// * `error` - the rebalancing plan has failed.
type CastaiAutoscalerV1beta1Status string

// Comparison represents a entity to entity ID comparison.
type CastaiFeaturesV1Comparison struct {
	// The entity ID to compare against (e.g., "da7a9f8d-ed18-40c3-89a7-93a81283af62").
	EntityId *string `json:"entityId,omitempty"`

	// EntityType defines available entity types for feature flag enablement.
	//
	//  - organizationId: Represents the main identifier(organization_id) for organization in Cast AI.
	//  - clusterId: Represents the main identifier(cluster_id) for cluster in Cast AI.
	//  - userId: Represents the user identifier(username) which is used to identify a user in users service.
	//  - environment: Represents the identifier which is used to identify an environment in Cast AI.
	EntityType *CastaiFeaturesV1EntityType `json:"entityType,omitempty"`

	// Operator defines available operators for targeting rules.
	//
	//  - operator_unspecified: unspecified operator.
	//  - equals: Represents the equals operator, ==.
	//  - not_equals: Represents the not equals operator, !=.
	Operator *CastaiFeaturesV1Operator `json:"operator,omitempty"`
}

// Represents a condition, which can be a comparison or a nested query.
type CastaiFeaturesV1Condition struct {
	// Comparison represents a entity to entity ID comparison.
	Comparison *CastaiFeaturesV1Comparison `json:"comparison,omitempty"`

	// QueryExpression represents a logical operation with conditions.
	NestedQuery *CastaiFeaturesV1QueryExpression `json:"nestedQuery,omitempty"`
}

// EntityType defines available entity types for feature flag enablement.
//
//   - organizationId: Represents the main identifier(organization_id) for organization in Cast AI.
//   - clusterId: Represents the main identifier(cluster_id) for cluster in Cast AI.
//   - userId: Represents the user identifier(username) which is used to identify a user in users service.
//   - environment: Represents the identifier which is used to identify an environment in Cast AI.
type CastaiFeaturesV1EntityType string

// LogicalOperator defines available logical operators for targeting rules.
type CastaiFeaturesV1LogicalOperator string

// Operator defines available operators for targeting rules.
//
//   - operator_unspecified: unspecified operator.
//   - equals: Represents the equals operator, ==.
//   - not_equals: Represents the not equals operator, !=.
type CastaiFeaturesV1Operator string

// QueryExpression represents a logical operation with conditions.
type CastaiFeaturesV1QueryExpression struct {
	// Represents evaluation conditions.
	Conditions []CastaiFeaturesV1Condition `json:"conditions"`

	// LogicalOperator defines available logical operators for targeting rules.
	LogicalOperator CastaiFeaturesV1LogicalOperator `json:"logicalOperator"`
}

// Operation object.
type CastaiOperationsV1beta1Operation struct {
	// Operation creation timestamp in RFC3339Nano format.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// Indicates whether the operation has finished or not. If 'false', the operation is still in progress. If 'true',
	// the has finished.
	Done *bool `json:"done,omitempty"`

	// OperationError object.
	Error *CastaiOperationsV1beta1OperationError `json:"error,omitempty"`

	// Operation finish timestamp in RFC3339Nano format.
	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	// ID of the operation.
	Id *string `json:"id,omitempty"`
}

// OperationError object.
type CastaiOperationsV1beta1OperationError struct {
	// Details is a concise human readable explanation for the error.
	Details *string `json:"details,omitempty"`

	// Reason is an operation specific failure code. Refer to documentation about possible outcomes.
	Reason *string `json:"reason,omitempty"`
}

// AKSClusterParams defines AKS-specific arguments.
type ExternalclusterV1AKSClusterParams struct {
	// Azure cluster resource group.
	ClusterResourceGroup *string `json:"clusterResourceGroup,omitempty"`

	// HttpProxyConfig holds settings when HTTP/S communication is required.
	HttpProxyConfig *ExternalclusterV1HttpProxyConfig `json:"httpProxyConfig,omitempty"`

	// Deprecated. This field is no longer updatable and node configuration equivalent should be used.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// Network plugin in use by the cluster. Can be `kubenet` or `azure`.
	NetworkPlugin *string `json:"networkPlugin,omitempty"`

	// Node resource group of the cluster.
	NodeResourceGroup *string `json:"nodeResourceGroup,omitempty"`
	PodCidr           *string `json:"podCidr"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// Azure subscription ID where cluster runs.
	SubscriptionId *string `json:"subscriptionId,omitempty"`

	// Azure tenant id.
	TenantId *string `json:"tenantId,omitempty"`

	// Zone name pattern in the cluster.
	ZoneNamePattern *string `json:"zoneNamePattern,omitempty"`
}

// AddNodeResponse is the result of AddNodeRequest.
type ExternalclusterV1AddNodeResponse struct {
	// The ID of the node.
	NodeId string `json:"nodeId"`

	// Add node operation ID.
	OperationId string `json:"operationId"`
}

// AnywhereClusterParams defines Anywhere-specific arguments.
type ExternalclusterV1AnywhereClusterParams struct {
	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// NamespaceID as unique identifier for the cluster.
	KubeSystemNamespaceId string `json:"kubeSystemNamespaceId"`
}

// CloudEvent represents a remote event that happened in the cloud, e.g. "node added".
type ExternalclusterV1CloudEvent struct {
	// Event type.
	EventType *string `json:"eventType,omitempty"`

	// Node provider ID, eg.: aws instance-id.
	Node *string `json:"node,omitempty"`

	// Cast node ID.
	NodeId *string `json:"nodeId"`

	// Node state.
	NodeState *string `json:"nodeState,omitempty"`
}

// Cluster represents external kubernetes cluster.
type ExternalclusterV1Cluster struct {
	// The date agent snapshot was last received.
	AgentSnapshotReceivedAt *time.Time `json:"agentSnapshotReceivedAt,omitempty"`

	// Agent status.
	AgentStatus *string `json:"agentStatus,omitempty"`

	// AKSClusterParams defines AKS-specific arguments.
	Aks *ExternalclusterV1AKSClusterParams `json:"aks,omitempty"`

	// All available zones in cluster's region.
	AllRegionZones *[]ExternalclusterV1Zone `json:"allRegionZones,omitempty"`

	// AnywhereClusterParams defines Anywhere-specific arguments.
	Anywhere *ExternalclusterV1AnywhereClusterParams `json:"anywhere,omitempty"`

	// User friendly unique cluster identifier.
	ClusterNameId *string `json:"clusterNameId,omitempty"`

	// The date when cluster was registered.
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The cluster's credentials ID.
	CredentialsId *string `json:"credentialsId,omitempty"`

	// The date when cluster was deleted.
	DeletedAt *time.Time `json:"deletedAt"`

	// EKSClusterParams defines EKS-specific arguments.
	Eks *ExternalclusterV1EKSClusterParams `json:"eks,omitempty"`

	// Timestamp when the first operation was performed for a given cluster, which marks when cluster optimisation started by CAST AI.
	FirstOperationAt *time.Time `json:"firstOperationAt,omitempty"`

	// GKEClusterParams defines GKE-specific arguments.
	Gke *ExternalclusterV1GKEClusterParams `json:"gke,omitempty"`

	// The cluster's ID.
	Id *string `json:"id,omitempty"`

	// Indicates if the cluster is in phase 2.
	IsPhase2 *bool `json:"isPhase2,omitempty"`

	// KOPSClusterParams defines KOPS-specific arguments.
	Kops              *ExternalclusterV1KOPSClusterParams `json:"kops,omitempty"`
	KubernetesVersion *string                             `json:"kubernetesVersion"`

	// Method used to onboard the cluster, eg.: console, terraform.
	ManagedBy *string `json:"managedBy,omitempty"`

	// The name of the external cluster.
	Name *string `json:"name,omitempty"`

	// OpenShiftClusterParams defines OpenShift-specific arguments.
	Openshift *ExternalclusterV1OpenshiftClusterParams `json:"openshift,omitempty"`

	// The cluster's organization ID.
	OrganizationId *string `json:"organizationId,omitempty"`

	// Cluster location where cloud provider organizes cloud resources, eg.: GCP project ID, AWS account ID.
	ProviderNamespaceId *string `json:"providerNamespaceId,omitempty"`

	// Cluster cloud provider type.
	ProviderType *string `json:"providerType,omitempty"`

	// Shows last reconcile error if any.
	ReconcileError *string                                `json:"reconcileError"`
	ReconcileInfo  *ExternalclusterV1ClusterReconcileInfo `json:"reconcileInfo,omitempty"`

	// Timestamp when the last reconcile was performed.
	ReconciledAt *time.Time `json:"reconciledAt"`

	// Region represents cluster region.
	Region                 *ExternalclusterV1Region                       `json:"region,omitempty"`
	SelfHostedWithEc2Nodes *ExternalclusterV1SelfHostedWithEC2NodesParams `json:"selfHostedWithEc2Nodes,omitempty"`

	// Deprecated. Node configuration equivalent should be used.
	SshPublicKey *string `json:"sshPublicKey"`

	// Current status of the cluster.
	Status *string `json:"status,omitempty"`

	// Cluster subnets.
	Subnets *[]ExternalclusterV1Subnet     `json:"subnets,omitempty"`
	Tags    *ExternalclusterV1Cluster_Tags `json:"tags,omitempty"`

	// Cluster zones.
	Zones *[]ExternalclusterV1Zone `json:"zones,omitempty"`
}

// ExternalclusterV1Cluster_Tags defines model for ExternalclusterV1Cluster.Tags.
type ExternalclusterV1Cluster_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1ClusterReconcileInfo defines model for externalcluster.v1.Cluster.ReconcileInfo.
type ExternalclusterV1ClusterReconcileInfo struct {
	// Shows last reconcile error if any.
	Error *string `json:"error"`

	// Number of times the reconcile was retried.
	ErrorCount *int32 `json:"errorCount,omitempty"`

	// Reconcile mode.
	Mode *ExternalclusterV1ClusterReconcileInfoReconcileMode `json:"mode,omitempty"`

	// Timestamp when the last reconcile was performed.
	ReconciledAt *time.Time `json:"reconciledAt"`

	// Timestamp when the reconcile was retried.
	RetryAt *time.Time `json:"retryAt"`

	// Timestamp when the reconcile was started.
	StartedAt *time.Time `json:"startedAt"`

	// Reconcile status.
	Status *ExternalclusterV1ClusterReconcileInfoReconcileStatus `json:"status,omitempty"`
}

// Reconcile mode.
type ExternalclusterV1ClusterReconcileInfoReconcileMode string

// Reconcile status.
type ExternalclusterV1ClusterReconcileInfoReconcileStatus string

// ExternalclusterV1ClusterUpdate defines model for externalcluster.v1.ClusterUpdate.
type ExternalclusterV1ClusterUpdate struct {
	// UpdateAKSClusterParams defines updatable AKS cluster configuration.
	Aks *ExternalclusterV1UpdateAKSClusterParams `json:"aks,omitempty"`

	// JSON encoded cluster credentials string.
	Credentials *string `json:"credentials,omitempty"`

	// UpdateEKSClusterParams defines updatable EKS cluster configuration.
	Eks *ExternalclusterV1UpdateEKSClusterParams `json:"eks,omitempty"`

	// UpdateGKEClusterParams defines updatable GKE cluster configuration.
	Gke                    *ExternalclusterV1UpdateGKEClusterParams             `json:"gke,omitempty"`
	SelfHostedWithEc2Nodes *ExternalclusterV1UpdateSelfHostedWithEC2NodesParams `json:"selfHostedWithEc2Nodes,omitempty"`
}

// ExternalclusterV1CreateAssumeRolePrincipalResponse defines model for externalcluster.v1.CreateAssumeRolePrincipalResponse.
type ExternalclusterV1CreateAssumeRolePrincipalResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// ExternalclusterV1CreateClusterTokenResponse defines model for externalcluster.v1.CreateClusterTokenResponse.
type ExternalclusterV1CreateClusterTokenResponse struct {
	Token *string `json:"token,omitempty"`
}

// ExternalclusterV1DeleteAssumeRolePrincipalResponse defines model for externalcluster.v1.DeleteAssumeRolePrincipalResponse.
type ExternalclusterV1DeleteAssumeRolePrincipalResponse = map[string]interface{}

// DeleteNodeResponse is the result of DeleteNodeRequest.
type ExternalclusterV1DeleteNodeResponse struct {
	// Node delete operation ID.
	OperationId *string `json:"operationId,omitempty"`
}

// ExternalclusterV1DisableGCPSAResponse defines model for externalcluster.v1.DisableGCPSAResponse.
type ExternalclusterV1DisableGCPSAResponse = map[string]interface{}

// ExternalclusterV1DisableGKESAResponse defines model for externalcluster.v1.DisableGKESAResponse.
type ExternalclusterV1DisableGKESAResponse = map[string]interface{}

// ExternalclusterV1DisconnectConfig defines model for externalcluster.v1.DisconnectConfig.
type ExternalclusterV1DisconnectConfig struct {
	// Whether CAST provisioned nodes should be deleted.
	DeleteProvisionedNodes *bool `json:"deleteProvisionedNodes,omitempty"`

	// Whether CAST Kubernetes resources should be kept.
	KeepKubernetesResources *bool `json:"keepKubernetesResources,omitempty"`
}

// ExternalclusterV1DrainConfig defines model for externalcluster.v1.DrainConfig.
type ExternalclusterV1DrainConfig struct {
	// If set to true, pods will be forcefully deleted after drain timeout.
	Force *bool `json:"force,omitempty"`

	// Node drain timeout in seconds. Defaults to 600s if not set.
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
}

// DrainNodeResponse is the result of DrainNodeRequest.
type ExternalclusterV1DrainNodeResponse struct {
	// Drain node operation ID.
	OperationId string `json:"operationId"`
}

// EKSClusterParams defines EKS-specific arguments.
type ExternalclusterV1EKSClusterParams struct {
	// AWS Account ID where cluster runs.
	AccountId     *string `json:"accountId,omitempty"`
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`

	// Name of the cluster.
	ClusterName  *string `json:"clusterName,omitempty"`
	DnsClusterIp *string `json:"dnsClusterIp,omitempty"`

	// Deprecated. Output only. Cluster's instance profile ARN used for CAST provisioned nodes.
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// Deprecated. Output only. Cluster's security groups configuration.
	SecurityGroups *[]string `json:"securityGroups,omitempty"`

	// Deprecated. Output only. Cluster's subnets configuration.
	Subnets *[]string `json:"subnets,omitempty"`

	// Deprecated. Output only. CAST provisioned nodes tags configuration.
	Tags *ExternalclusterV1EKSClusterParams_Tags `json:"tags,omitempty"`
}

// Deprecated. Output only. CAST provisioned nodes tags configuration.
type ExternalclusterV1EKSClusterParams_Tags struct {
	AdditionalProperties map[string]string `json:"-"`
}

// AKSClusterParams is a placeholder for future use.
type ExternalclusterV1GCPCreateSARequestAKSClusterParams = map[string]interface{}

// ExternalclusterV1GCPCreateSAResponse defines model for externalcluster.v1.GCPCreateSAResponse.
type ExternalclusterV1GCPCreateSAResponse struct {
	ServiceAccountEmail *string `json:"serviceAccountEmail,omitempty"`

	// service_account_id - The unique, stable numeric ID for the service
	// account. Each service account retains its unique ID even if you delete the
	// service account. For example, if you delete a service account, then create a
	// new service account with the same name, the new service account has a
	// different unique ID than the deleted service account.
	ServiceAccountId *string `json:"serviceAccountId,omitempty"`
}

// GKEClusterParams defines GKE-specific arguments.
type ExternalclusterV1GKEClusterParams struct {
	CastServiceAccount   *string `json:"castServiceAccount,omitempty"`
	ClientServiceAccount *string `json:"clientServiceAccount,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Location of the cluster.
	Location *string `json:"location,omitempty"`

	// Max pods per node. Default is 110.
	MaxPodsPerNode *int32 `json:"maxPodsPerNode,omitempty"`

	// GCP project ID where cluster runs.
	ProjectId *string `json:"projectId,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`
}

// ExternalclusterV1GKECreateSAResponse defines model for externalcluster.v1.GKECreateSAResponse.
type ExternalclusterV1GKECreateSAResponse struct {
	ServiceAccount *string `json:"serviceAccount,omitempty"`
}

// GPUConfig describes instance GPU configuration.
//
// Use for:
// * Creating GCP N1 with customer quantity and type of GPUs attached.
// * Setting required labels for AKS GPU nodes.
// * Configuring gpu sharing.
// Required while provisioning GCP N1 instance types with GPU.
// Eg.: n1-standard-2 with 8 x NVIDIA Tesla K80
type ExternalclusterV1GPUConfig struct {
	// Number of GPUs. N1 GCP machines allow attaching custom number of GPUs.
	Count *int32 `json:"count,omitempty"`

	// MIGConfig configures MIG slicing on NVIDIA GPUs.
	MigConfig *ExternalclusterV1MIGConfig `json:"migConfig,omitempty"`

	// GPUTimeSharing configures sharing strategy by splitting time of single GPU to several processes.
	TimeSharing *ExternalclusterV1GPUTimeSharing `json:"timeSharing,omitempty"`

	// GPU type.  N1 GCP machines allow attaching custom type of GPUs.
	// Public documentation refers to this as "accelerator type" which you should read "name of specialized hardware".
	Type *string `json:"type,omitempty"`
}

// ExternalclusterV1GPUDevice defines model for externalcluster.v1.GPUDevice.
type ExternalclusterV1GPUDevice struct {
	Count        *int32  `json:"count,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	MemoryMib    *int32  `json:"memoryMib,omitempty"`
}

// ExternalclusterV1GPUInfo defines model for externalcluster.v1.GPUInfo.
type ExternalclusterV1GPUInfo struct {
	GpuDevices *[]ExternalclusterV1GPUDevice `json:"gpuDevices,omitempty"`
}

// GPUTimeSharing configures sharing strategy by splitting time of single GPU to several processes.
type ExternalclusterV1GPUTimeSharing struct {
	Replicas *int32 `json:"replicas,omitempty"`
}

// ExternalclusterV1GetAssumeRolePrincipalResponse defines model for externalcluster.v1.GetAssumeRolePrincipalResponse.
type ExternalclusterV1GetAssumeRolePrincipalResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// ExternalclusterV1GetAssumeRoleUserResponse defines model for externalcluster.v1.GetAssumeRoleUserResponse.
type ExternalclusterV1GetAssumeRoleUserResponse struct {
	Arn *string `json:"arn,omitempty"`
}

// GetCleanupScriptResponse is the result of GetCleanupScriptRequest.
type ExternalclusterV1GetCleanupScriptResponse struct {
	Script *string `json:"script,omitempty"`
}

// GetCredentialsScriptResponse is the result of GetCredentialsScriptRequest.
type ExternalclusterV1GetCredentialsScriptResponse struct {
	Script *string `json:"script,omitempty"`
}

// ExternalclusterV1GetListNodesFiltersResponse defines model for externalcluster.v1.GetListNodesFiltersResponse.
type ExternalclusterV1GetListNodesFiltersResponse struct {
	Filters *[]ExternalclusterV1NodeListFilter `json:"filters,omitempty"`
}

// HandleCloudEventResponse is the result of HandleCloudEventRequest.
type ExternalclusterV1HandleCloudEventResponse = map[string]interface{}

// HttpProxyConfig holds settings when HTTP/S communication is required.
type ExternalclusterV1HttpProxyConfig struct {
	HttpProxy  *string   `json:"httpProxy,omitempty"`
	HttpsProxy *string   `json:"httpsProxy,omitempty"`
	NoProxy    *[]string `json:"noProxy,omitempty"`
}

// KOPSClusterParams defines KOPS-specific arguments.
type ExternalclusterV1KOPSClusterParams struct {
	// Cloud provider of the cluster.
	Cloud *string `json:"cloud,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`

	// KOPS state store url.
	StateStore *string `json:"stateStore,omitempty"`
}

// ListClustersResponse is the result of ListClustersRequest.
type ExternalclusterV1ListClustersResponse struct {
	Items *[]ExternalclusterV1Cluster `json:"items,omitempty"`
}

// ExternalclusterV1ListNodesResponse defines model for externalcluster.v1.ListNodesResponse.
type ExternalclusterV1ListNodesResponse struct {
	Items      *[]ExternalclusterV1Node `json:"items,omitempty"`
	NextCursor *string                  `json:"nextCursor,omitempty"`
}

// MIGConfig configures MIG slicing on NVIDIA GPUs.
type ExternalclusterV1MIGConfig struct {
	GpuMemoryGb    *int32    `json:"gpuMemoryGb"`
	PartitionSizes *[]string `json:"partitionSizes,omitempty"`
}

// Node represents a single VM that run as Kubernetes master or worker.
type ExternalclusterV1Node struct {
	AddedBy     *string                            `json:"addedBy,omitempty"`
	Annotations *ExternalclusterV1Node_Annotations `json:"annotations,omitempty"`
	Cloud       *string                            `json:"cloud,omitempty"`

	// created_at represents timestamp of when node was created in cloud infrastructure.
	CreatedAt *time.Time                `json:"createdAt,omitempty"`
	GpuInfo   *ExternalclusterV1GPUInfo `json:"gpuInfo,omitempty"`
	Id        *string                   `json:"id,omitempty"`

	// Deprecated. Use node_info architecture field.
	InstanceArchitecture *string `json:"instanceArchitecture"`
	InstanceId           *string `json:"instanceId"`

	// Output only. Cloud provider instance tags/labels.
	InstanceLabels *ExternalclusterV1Node_InstanceLabels `json:"instanceLabels,omitempty"`

	// Output only. Cloud provider instance name.
	InstanceName  *string `json:"instanceName"`
	InstancePrice *string `json:"instancePrice"`
	InstanceType  *string `json:"instanceType,omitempty"`

	// joined_at represents timestamp of when node has joined kubernetes cluster.
	JoinedAt *time.Time                    `json:"joinedAt,omitempty"`
	Labels   *ExternalclusterV1Node_Labels `json:"labels,omitempty"`
	Name     *string                       `json:"name,omitempty"`

	// NodeNetwork represents node network.
	Network             *ExternalclusterV1NodeNetwork `json:"network,omitempty"`
	NodeConfigurationId *string                       `json:"nodeConfigurationId"`
	NodeInfo            *ExternalclusterV1NodeInfo    `json:"nodeInfo,omitempty"`
	ProviderId          *string                       `json:"providerId"`
	Resources           *ExternalclusterV1Resources   `json:"resources,omitempty"`

	// NodeType defines the role of the VM when joining the Kubernetes cluster. Default value is not allowed.
	Role *ExternalclusterV1NodeType `json:"role,omitempty"`

	// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
	SpotConfig *ExternalclusterV1NodeSpotConfig `json:"spotConfig,omitempty"`

	// NodeState contains feedback information about progress on the node provisioning.
	State         *ExternalclusterV1NodeState `json:"state,omitempty"`
	SubnetId      *string                     `json:"subnetId"`
	Taints        *[]ExternalclusterV1Taint   `json:"taints,omitempty"`
	Unschedulable *bool                       `json:"unschedulable,omitempty"`
	Zone          *string                     `json:"zone,omitempty"`
}

// ExternalclusterV1Node_Annotations defines model for ExternalclusterV1Node.Annotations.
type ExternalclusterV1Node_Annotations struct {
	AdditionalProperties map[string]string `json:"-"`
}

// Output only. Cloud provider instance tags/labels.
type ExternalclusterV1Node_InstanceLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1Node_Labels defines model for ExternalclusterV1Node.Labels.
type ExternalclusterV1Node_Labels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// NodeAffinity provides control over the assignment of individual nodes to dedicated host instances.
type ExternalclusterV1NodeAffinity struct {
	// THe affinity rules required for choosing the group.
	Affinity *[]K8sSelectorV1KubernetesNodeAffinity `json:"affinity,omitempty"`

	// The name of the dedicated group.
	DedicatedGroup *string `json:"dedicatedGroup"`
}

// ExternalclusterV1NodeConfig defines model for externalcluster.v1.NodeConfig.
type ExternalclusterV1NodeConfig struct {
	// ID reference of Node configuration (template) to be used for node creation. Supersedes Configuration Name.
	ConfigurationId *string `json:"configurationId"`

	// Name reference of Node configuration (template)to be used for node creation.
	// Superseded if Configuration ID reference is provided.
	// Request will fail if several configurations with same name exists for a given cluster.
	ConfigurationName *string `json:"configurationName"`

	// GPUConfig describes instance GPU configuration.
	//
	// Use for:
	// * Creating GCP N1 with customer quantity and type of GPUs attached.
	// * Setting required labels for AKS GPU nodes.
	// * Configuring gpu sharing.
	// Required while provisioning GCP N1 instance types with GPU.
	// Eg.: n1-standard-2 with 8 x NVIDIA Tesla K80
	GpuConfig *ExternalclusterV1GPUConfig `json:"gpuConfig,omitempty"`

	// Instance type of the node.
	InstanceType string `json:"instanceType"`

	// Node Kubernetes labels.
	KubernetesLabels *ExternalclusterV1NodeConfig_KubernetesLabels `json:"kubernetesLabels,omitempty"`

	// Node Kubernetes taints.
	KubernetesTaints *[]ExternalclusterV1Taint `json:"kubernetesTaints,omitempty"`

	// NodeAffinity provides control over the assignment of individual nodes to dedicated host instances.
	NodeAffinity *ExternalclusterV1NodeAffinity `json:"nodeAffinity,omitempty"`

	// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
	SpotConfig *ExternalclusterV1NodeSpotConfig `json:"spotConfig,omitempty"`

	// Node subnet ID.
	SubnetId *string `json:"subnetId"`

	// NodeVolume defines node's local root volume configuration.
	Volume *ExternalclusterV1NodeVolume `json:"volume,omitempty"`

	// Zone of the node.
	Zone *string `json:"zone"`
}

// Node Kubernetes labels.
type ExternalclusterV1NodeConfig_KubernetesLabels struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalclusterV1NodeInfo defines model for externalcluster.v1.NodeInfo.
type ExternalclusterV1NodeInfo struct {
	Architecture            *string `json:"architecture,omitempty"`
	ContainerRuntimeVersion *string `json:"containerRuntimeVersion,omitempty"`
	KernelVersion           *string `json:"kernelVersion,omitempty"`
	KubeProxyVersion        *string `json:"kubeProxyVersion,omitempty"`
	KubeletVersion          *string `json:"kubeletVersion,omitempty"`
	OperatingSystem         *string `json:"operatingSystem,omitempty"`
	OsImage                 *string `json:"osImage,omitempty"`
}

// ExternalclusterV1NodeListFilter defines model for externalcluster.v1.NodeListFilter.
type ExternalclusterV1NodeListFilter struct {
	Name   *string   `json:"name,omitempty"`
	Type   *string   `json:"type,omitempty"`
	Values *[]string `json:"values,omitempty"`
}

// NodeNetwork represents node network.
type ExternalclusterV1NodeNetwork struct {
	PrivateIp *string `json:"privateIp,omitempty"`
	PublicIp  *string `json:"publicIp,omitempty"`
}

// NodeSpotConfig defines if node should be created as spot instance, and params for creation.
type ExternalclusterV1NodeSpotConfig struct {
	// Whether node should be created as spot instance.
	IsSpot *bool `json:"isSpot,omitempty"`

	// Spot instance price. Applicable only for AWS nodes.
	Price *string `json:"price,omitempty"`
}

// NodeState contains feedback information about progress on the node provisioning.
type ExternalclusterV1NodeState struct {
	Phase *string `json:"phase,omitempty"`
}

// NodeType defines the role of the VM when joining the Kubernetes cluster. Default value is not allowed.
type ExternalclusterV1NodeType string

// NodeVolume defines node's local root volume configuration.
type ExternalclusterV1NodeVolume struct {
	// RaidConfig allow You have two or more devices, of approximately the same size, and you want to combine their storage capacity
	// and also combine their performance by accessing them in parallel.
	RaidConfig *ExternalclusterV1RaidConfig `json:"raidConfig,omitempty"`

	// Volume size in GiB.
	Size *int32 `json:"size,omitempty"`
}

// OpenShiftClusterParams defines OpenShift-specific arguments.
type ExternalclusterV1OpenshiftClusterParams struct {
	// Cloud provider of the cluster.
	Cloud *string `json:"cloud,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`
	InternalId  *string `json:"internalId,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`
}

// RaidConfig allow You have two or more devices, of approximately the same size, and you want to combine their storage capacity
// and also combine their performance by accessing them in parallel.
type ExternalclusterV1RaidConfig struct {
	// Specify the RAID0 chunk size in kilobytes, this parameter affects the read/write in the disk array and must be tailored
	// for the type of data written by the workloads in the node. If not provided it will default to 64KB.
	ChunkSize *int32 `json:"chunkSize"`
}

// ReconcileClusterResponse is the result of ReconcileClusterRequest.
type ExternalclusterV1ReconcileClusterResponse = map[string]interface{}

// Region represents cluster region.
type ExternalclusterV1Region struct {
	// Display name of the region.
	DisplayName *string `json:"displayName,omitempty"`

	// Name of the region.
	Name *string `json:"name,omitempty"`
}

// RegisterClusterRequest registers cluster.
type ExternalclusterV1RegisterClusterRequest struct {
	// AKSClusterParams defines AKS-specific arguments.
	Aks *ExternalclusterV1AKSClusterParams `json:"aks,omitempty"`

	// AnywhereClusterParams defines Anywhere-specific arguments.
	Anywhere *ExternalclusterV1AnywhereClusterParams `json:"anywhere,omitempty"`

	// EKSClusterParams defines EKS-specific arguments.
	Eks *ExternalclusterV1EKSClusterParams `json:"eks,omitempty"`

	// GKEClusterParams defines GKE-specific arguments.
	Gke *ExternalclusterV1GKEClusterParams `json:"gke,omitempty"`

	// The ID of the cluster.
	Id *string `json:"id,omitempty"`

	// KOPSClusterParams defines KOPS-specific arguments.
	Kops *ExternalclusterV1KOPSClusterParams `json:"kops,omitempty"`

	// The name of the cluster.
	Name string `json:"name"`

	// OpenShiftClusterParams defines OpenShift-specific arguments.
	Openshift *ExternalclusterV1OpenshiftClusterParams `json:"openshift,omitempty"`

	// Organization of the cluster.
	OrganizationId         *string                                        `json:"organizationId,omitempty"`
	SelfHostedWithEc2Nodes *ExternalclusterV1SelfHostedWithEC2NodesParams `json:"selfHostedWithEc2Nodes,omitempty"`
}

// ExternalclusterV1Resources defines model for externalcluster.v1.Resources.
type ExternalclusterV1Resources struct {
	BandwidthCapacityMbps *int32 `json:"bandwidthCapacityMbps,omitempty"`
	CpuAllocatableMilli   *int32 `json:"cpuAllocatableMilli,omitempty"`
	CpuCapacityMilli      *int32 `json:"cpuCapacityMilli,omitempty"`
	CpuRequestsMilli      *int32 `json:"cpuRequestsMilli,omitempty"`
	MemAllocatableMib     *int32 `json:"memAllocatableMib,omitempty"`
	MemCapacityMib        *int32 `json:"memCapacityMib,omitempty"`
	MemRequestsMib        *int32 `json:"memRequestsMib,omitempty"`
}

// ExternalclusterV1SelfHostedWithEC2NodesParams defines model for externalcluster.v1.SelfHostedWithEC2NodesParams.
type ExternalclusterV1SelfHostedWithEC2NodesParams struct {
	// AWS Account ID where cluster runs.
	AccountId     *string `json:"accountId,omitempty"`
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`

	// Name of the cluster.
	ClusterName *string `json:"clusterName,omitempty"`

	// Region of the cluster.
	Region *string `json:"region,omitempty"`
}

// Subnet represents cluster subnet.
type ExternalclusterV1Subnet struct {
	// Cidr block of the subnet.
	Cidr *string `json:"cidr,omitempty"`

	// The ID of the subnet.
	Id *string `json:"id,omitempty"`

	// Deprecated. Subnet name is not filled and should not be used.
	Name *string `json:"name,omitempty"`

	// Public defines if subnet is publicly routable.
	// Optional. Populated for EKS provider only.
	Public *bool `json:"public"`

	// Subnet's zone name.
	ZoneName *string `json:"zoneName,omitempty"`
}

// Taint defines node taint in kubernetes cluster.
type ExternalclusterV1Taint struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

// TriggerHibernateClusterResponse is the result of HibernateClusterRequest.
type ExternalclusterV1TriggerHibernateClusterResponse struct {
	// The ID of the node.
	ClusterId string `json:"clusterId"`

	// Add node operation ID.
	OperationId string `json:"operationId"`
}

// TriggerResumeClusterResponse is the result of ResumeClusterRequest.
type ExternalclusterV1TriggerResumeClusterResponse struct {
	// The ID of the node.
	ClusterId string `json:"clusterId"`

	// Add node operation ID.
	OperationId string `json:"operationId"`
}

// UpdateAKSClusterParams defines updatable AKS cluster configuration.
type ExternalclusterV1UpdateAKSClusterParams struct {
	// HttpProxyConfig holds settings when HTTP/S communication is required.
	HttpProxyConfig *ExternalclusterV1HttpProxyConfig `json:"httpProxyConfig,omitempty"`
}

// UpdateClusterTagsResponse result of cluster tags update.
type ExternalclusterV1UpdateClusterTagsResponse = map[string]interface{}

// UpdateEKSClusterParams defines updatable EKS cluster configuration.
type ExternalclusterV1UpdateEKSClusterParams struct {
	AssumeRoleArn *string `json:"assumeRoleArn,omitempty"`
}

// UpdateGKEClusterParams defines updatable GKE cluster configuration.
type ExternalclusterV1UpdateGKEClusterParams struct {
	// service account email to impersonate.
	GkeSaImpersonate *string `json:"gkeSaImpersonate,omitempty"`

	// GCP target project where cluster runs.
	ProjectId *string `json:"projectId,omitempty"`
}

// ExternalclusterV1UpdateSelfHostedWithEC2NodesParams defines model for externalcluster.v1.UpdateSelfHostedWithEC2NodesParams.
type ExternalclusterV1UpdateSelfHostedWithEC2NodesParams struct {
	AssumeRoleArn      *string `json:"assumeRoleArn,omitempty"`
	InstanceProfileArn *string `json:"instanceProfileArn"`
}

// Cluster zone.
type ExternalclusterV1Zone struct {
	// ID of the zone.
	Id *string `json:"id,omitempty"`

	// Zone name.
	Name *string `json:"name,omitempty"`
}

// K8sSelectorV1KubernetesNodeAffinity defines model for k8s_selector.v1.KubernetesNodeAffinity.
type K8sSelectorV1KubernetesNodeAffinity struct {
	Key string `json:"key"`

	// - IN: In values
	//  - NotIn: Not in values
	//  - Exists: Just exist
	//  - DoesNotExist: Values does not exist
	//  - Gt: Greater then
	//  - Lt: Lower then
	Operator K8sSelectorV1Operator `json:"operator"`
	Values   []string              `json:"values"`
}

// - IN: In values
//   - NotIn: Not in values
//   - Exists: Just exist
//   - DoesNotExist: Values does not exist
//   - Gt: Greater then
//   - Lt: Lower then
type K8sSelectorV1Operator string

// AutoscalerAPIGetAgentScriptParams defines parameters for AutoscalerAPIGetAgentScript.
type AutoscalerAPIGetAgentScriptParams struct {
	// AWS region of your EKS cluster.
	EksRegion *string `form:"eks.region,omitempty" json:"eks.region,omitempty"`

	// Your AWS account id. Can be retrieved by executing `aws sts get-caller-identity`.
	EksAccountId *string `form:"eks.accountId,omitempty" json:"eks.accountId,omitempty"`

	// The name of your EKS cluster.
	EksClusterName *string `form:"eks.clusterName,omitempty" json:"eks.clusterName,omitempty"`

	// GCP region of your GKE cluster.
	GkeRegion *string `form:"gke.region,omitempty" json:"gke.region,omitempty"`

	// GCP project id in which your GKE cluster is created.
	GkeProjectId *string `form:"gke.projectId,omitempty" json:"gke.projectId,omitempty"`

	// The name of your GKE cluster.
	GkeClusterName *string `form:"gke.clusterName,omitempty" json:"gke.clusterName,omitempty"`

	// Location of your GKE cluster.
	GkeLocation *string `form:"gke.location,omitempty" json:"gke.location,omitempty"`

	// Provider of the cluster.
	Provider *AutoscalerAPIGetAgentScriptParamsProvider `form:"provider,omitempty" json:"provider,omitempty"`

	// The Cloud Service Provider (CSP) of your kOps cluster.
	//
	// Possible values are: `aws`, `gcp`.
	//
	//  - invalid: Invalid.
	//  - aws: Amazon web services.
	//  - gcp: Google cloud provider.
	//  - azure: Microsoft Azure.
	//  - unknown: Unknown.
	KopsCsp *AutoscalerAPIGetAgentScriptParamsKopsCsp `form:"kops.csp,omitempty" json:"kops.csp,omitempty"`

	// The region of your kOps cluster. Region is CSP specific.
	KopsRegion *string `form:"kops.region,omitempty" json:"kops.region,omitempty"`

	// The name of your kOps cluster.
	KopsClusterName *string `form:"kops.clusterName,omitempty" json:"kops.clusterName,omitempty"`

	// The kOps cluster state store. Only remote S3 state is supported at the moment.
	KopsStateStore *string `form:"kops.stateStore,omitempty" json:"kops.stateStore,omitempty"`

	// Azure location of your AKS cluster.
	AksLocation *string `form:"aks.location,omitempty" json:"aks.location,omitempty"`

	// Azure resource group where AKS nodes are deployed.
	AksNodeResourceGroup *string `form:"aks.nodeResourceGroup,omitempty" json:"aks.nodeResourceGroup,omitempty"`

	// Azure account subscription id.
	AksSubscriptionId *string `form:"aks.subscriptionId,omitempty" json:"aks.subscriptionId,omitempty"`

	// The Cloud Service Provider (CSP) of your OpenShift cluster.
	//
	// Possible values are: `aws`.
	//
	//  - invalid: Invalid.
	//  - aws: Amazon web services.
	//  - gcp: Google cloud provider.
	//  - azure: Microsoft Azure.
	//  - unknown: Unknown.
	OpenshiftCsp *AutoscalerAPIGetAgentScriptParamsOpenshiftCsp `form:"openshift.csp,omitempty" json:"openshift.csp,omitempty"`

	// The region of your OpenShift cluster. Region is CSP specific.
	OpenshiftRegion *string `form:"openshift.region,omitempty" json:"openshift.region,omitempty"`

	// The name of your OpenShift cluster.
	OpenshiftClusterName *string `form:"openshift.clusterName,omitempty" json:"openshift.clusterName,omitempty"`

	// The OpenShift cluster ID. It can be found in the ClusterVersion object.
	//
	// [Link to docs](https://docs.openshift.com/container-platform/4.8/support/gathering-cluster-data.html#support-get-cluster-id_gathering-cluster-data).
	OpenshiftInternalId *string `form:"openshift.internalId,omitempty" json:"openshift.internalId,omitempty"`

	// The uid of the user that runs the agent pod.
	OpenshiftRunAsUser *string `form:"openshift.runAsUser,omitempty" json:"openshift.runAsUser,omitempty"`

	// The gid of the user that runs the agent pod.
	OpenshiftRunAsGroup *string `form:"openshift.runAsGroup,omitempty" json:"openshift.runAsGroup,omitempty"`

	// The gid of the user that owns the agent pod's volumes.
	OpenshiftFsGroup *string `form:"openshift.fsGroup,omitempty" json:"openshift.fsGroup,omitempty"`

	// The name of your cluster.
	AnywhereClusterName *string `form:"anywhere.clusterName,omitempty" json:"anywhere.clusterName,omitempty"`
}

// AutoscalerAPIGetAgentScriptParamsProvider defines parameters for AutoscalerAPIGetAgentScript.
type AutoscalerAPIGetAgentScriptParamsProvider string

// AutoscalerAPIGetAgentScriptParamsKopsCsp defines parameters for AutoscalerAPIGetAgentScript.
type AutoscalerAPIGetAgentScriptParamsKopsCsp string

// AutoscalerAPIGetAgentScriptParamsOpenshiftCsp defines parameters for AutoscalerAPIGetAgentScript.
type AutoscalerAPIGetAgentScriptParamsOpenshiftCsp string

// AuthTokenAPIListAuthTokensParams defines parameters for AuthTokenAPIListAuthTokens.
type AuthTokenAPIListAuthTokensParams struct {
	// User id to filter by, if this is set we will only return tokens that have this user id.
	UserId *string `form:"userId,omitempty" json:"userId,omitempty"`
}

// AuthTokenAPICreateAuthTokenJSONBody defines parameters for AuthTokenAPICreateAuthToken.
type AuthTokenAPICreateAuthTokenJSONBody = CastaiAuthtokenV1beta1AuthToken

// AuthTokenAPIUpdateAuthTokenJSONBody defines parameters for AuthTokenAPIUpdateAuthToken.
type AuthTokenAPIUpdateAuthTokenJSONBody = CastaiAuthtokenV1beta1AuthTokenUpdate

// AutoscalerAPIMigrateKarpenterDefinitionsJSONBody defines parameters for AutoscalerAPIMigrateKarpenterDefinitions.
type AutoscalerAPIMigrateKarpenterDefinitionsJSONBody = map[string]interface{}

// AutoscalerAPIGetProblematicWorkloadsParams defines parameters for AutoscalerAPIGetProblematicWorkloads.
type AutoscalerAPIGetProblematicWorkloadsParams struct {
	// When enabled won't consider pods without controller, job pods, pods with removal-disabled annotation as problematic pods.
	AggressiveMode *bool `form:"aggressiveMode,omitempty" json:"aggressiveMode,omitempty"`
}

// AutoscalerAPIListRebalancingPlansParams defines parameters for AutoscalerAPIListRebalancingPlans.
type AutoscalerAPIListRebalancingPlansParams struct {
	// A limit on the number of objects to be returned, between 1 and 500.
	Limit *string `form:"limit,omitempty" json:"limit,omitempty"`

	// A cursor for use in pagination.
	//
	// This is a token that defines your place in the list. For instance, if you make a list request - you will receive a `nextCursor` field in response metadata. Given that the `nextCursor` field is
	// not empty, it can be used as a cursor query parameter to get subsequent items. If `nextCursor` is empty - there are no more items to retrieve.
	Cursor *string `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Status list filter
	FilterStatuses *[]AutoscalerAPIListRebalancingPlansParamsFilterStatuses `form:"filter.statuses,omitempty" json:"filter.statuses,omitempty"`

	// If include operations is true then operations is returned in response, otherwise is skipped
	IncludeOperations *bool `form:"includeOperations,omitempty" json:"includeOperations,omitempty"`

	// If include configurations is true then configurations is returned in response, otherwise is skipped
	IncludeConfigurations *bool `form:"includeConfigurations,omitempty" json:"includeConfigurations,omitempty"`

	// If true, negative plans are also returned. Note: negative plans are already returned when querying for specific statuses.
	IncludeNegative *bool `form:"includeNegative,omitempty" json:"includeNegative,omitempty"`
}

// AutoscalerAPIListRebalancingPlansParamsFilterStatuses defines parameters for AutoscalerAPIListRebalancingPlans.
type AutoscalerAPIListRebalancingPlansParamsFilterStatuses string

// AutoscalerAPIGenerateRebalancingPlanJSONBody defines parameters for AutoscalerAPIGenerateRebalancingPlan.
type AutoscalerAPIGenerateRebalancingPlanJSONBody = AutoscalerAPIGenerateRebalancingPlanRequest

// AutoscalerAPIGetRebalancingPlanParams defines parameters for AutoscalerAPIGetRebalancingPlan.
type AutoscalerAPIGetRebalancingPlanParams struct {
	// If include operations is true then operations is returned in response, otherwise is skipped
	IncludeOperations *bool `form:"includeOperations,omitempty" json:"includeOperations,omitempty"`

	// If include configurations is true then configurations is returned in response, otherwise is skipped
	IncludeConfigurations *bool `form:"includeConfigurations,omitempty" json:"includeConfigurations,omitempty"`
}

// ExternalClusterAPIRegisterClusterJSONBody defines parameters for ExternalClusterAPIRegisterCluster.
type ExternalClusterAPIRegisterClusterJSONBody = ExternalclusterV1RegisterClusterRequest

// ExternalClusterAPIUpdateClusterJSONBody defines parameters for ExternalClusterAPIUpdateCluster.
type ExternalClusterAPIUpdateClusterJSONBody = ExternalclusterV1ClusterUpdate

// ExternalClusterAPIGetCredentialsScriptParams defines parameters for ExternalClusterAPIGetCredentialsScript.
type ExternalClusterAPIGetCredentialsScriptParams struct {
	// Whether an AWS CrossRole should be used for authentication.
	CrossRole *bool `form:"crossRole,omitempty" json:"crossRole,omitempty"`

	// Whether NVIDIA device plugin DaemonSet should be installed during Phase 2 on-boarding.
	NvidiaDevicePlugin *bool `form:"nvidiaDevicePlugin,omitempty" json:"nvidiaDevicePlugin,omitempty"`

	// Whether CAST AI Security Insights agent should be installed.
	InstallSecurityAgent *bool `form:"installSecurityAgent,omitempty" json:"installSecurityAgent,omitempty"`

	// Whether CAST AI Autoscaler components should be installed.
	// To enable backwards compatibility, when the field is omitted, it is defaulted to true.
	InstallAutoscalerAgent *bool `form:"installAutoscalerAgent,omitempty" json:"installAutoscalerAgent,omitempty"`

	// Whether CAST AI GPU metrics exporter should be installed.
	InstallGpuMetricsExporter *bool `form:"installGpuMetricsExporter,omitempty" json:"installGpuMetricsExporter,omitempty"`

	// Whether CAST AI AI-Optimizer Proxy should be installed.
	InstallAiOptimizerProxy *bool `form:"installAiOptimizerProxy,omitempty" json:"installAiOptimizerProxy,omitempty"`

	// Whether GCP SA Impersonate feature should be enabled.
	GcpSaImpersonate *bool `form:"gcpSaImpersonate,omitempty" json:"gcpSaImpersonate,omitempty"`

	// Whether Netflow network exporter should be installed.
	InstallNetflowExporter *bool `form:"installNetflowExporter,omitempty" json:"installNetflowExporter,omitempty"`

	// Whether CAST AI Workload Autoscaler should be installed.
	InstallWorkloadAutoscaler *bool `form:"installWorkloadAutoscaler,omitempty" json:"installWorkloadAutoscaler,omitempty"`
}

// ExternalClusterAPIDisconnectClusterJSONBody defines parameters for ExternalClusterAPIDisconnectCluster.
type ExternalClusterAPIDisconnectClusterJSONBody = ExternalclusterV1DisconnectConfig

// ExternalClusterAPIHandleCloudEventJSONBody defines parameters for ExternalClusterAPIHandleCloudEvent.
type ExternalClusterAPIHandleCloudEventJSONBody = ExternalclusterV1CloudEvent

// ExternalClusterAPIGCPCreateSAJSONBody defines parameters for ExternalClusterAPIGCPCreateSA.
type ExternalClusterAPIGCPCreateSAJSONBody = ExternalClusterAPIGCPCreateSARequest

// ExternalClusterAPIGKECreateSAJSONBody defines parameters for ExternalClusterAPIGKECreateSA.
type ExternalClusterAPIGKECreateSAJSONBody = ExternalClusterAPIGKECreateSARequest

// ExternalClusterAPIListNodesParams defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParams struct {
	PageLimit *string `form:"page.limit,omitempty" json:"page.limit,omitempty"`

	// Cursor that defines token indicating where to start the next page.
	// Empty value indicates to start from beginning of the dataset.
	PageCursor               *string                                         `form:"page.cursor,omitempty" json:"page.cursor,omitempty"`
	NodeId                   *string                                         `form:"nodeId,omitempty" json:"nodeId,omitempty"`
	NodeStatus               *ExternalClusterAPIListNodesParamsNodeStatus    `form:"nodeStatus,omitempty" json:"nodeStatus,omitempty"`
	InstanceType             *string                                         `form:"instanceType,omitempty" json:"instanceType,omitempty"`
	LifecycleType            *ExternalClusterAPIListNodesParamsLifecycleType `form:"lifecycleType,omitempty" json:"lifecycleType,omitempty"`
	RemovalDisabled          *bool                                           `form:"removalDisabled,omitempty" json:"removalDisabled,omitempty"`
	Unschedulable            *bool                                           `form:"unschedulable,omitempty" json:"unschedulable,omitempty"`
	Zone                     *string                                         `form:"zone,omitempty" json:"zone,omitempty"`
	NodeConfigurationName    *string                                         `form:"nodeConfigurationName,omitempty" json:"nodeConfigurationName,omitempty"`
	NodeConfigurationVersion *string                                         `form:"nodeConfigurationVersion,omitempty" json:"nodeConfigurationVersion,omitempty"`
	NodeTemplateName         *string                                         `form:"nodeTemplateName,omitempty" json:"nodeTemplateName,omitempty"`
	NodeTemplateVersion      *string                                         `form:"nodeTemplateVersion,omitempty" json:"nodeTemplateVersion,omitempty"`
	NodeName                 *string                                         `form:"nodeName,omitempty" json:"nodeName,omitempty"`
	ExcludeDeleting          *bool                                           `form:"excludeDeleting,omitempty" json:"excludeDeleting,omitempty"`
}

// ExternalClusterAPIListNodesParamsNodeStatus defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParamsNodeStatus string

// ExternalClusterAPIListNodesParamsLifecycleType defines parameters for ExternalClusterAPIListNodes.
type ExternalClusterAPIListNodesParamsLifecycleType string

// ExternalClusterAPIAddNodeJSONBody defines parameters for ExternalClusterAPIAddNode.
type ExternalClusterAPIAddNodeJSONBody = ExternalclusterV1NodeConfig

// ExternalClusterAPIDeleteNodeParams defines parameters for ExternalClusterAPIDeleteNode.
type ExternalClusterAPIDeleteNodeParams struct {
	// Node drain timeout in seconds. Defaults to 600s if not set.
	DrainTimeout *string `form:"drainTimeout,omitempty" json:"drainTimeout,omitempty"`

	// If set to true, node will be deleted even if node fails to be drained gracefully.
	ForceDelete *bool `form:"forceDelete,omitempty" json:"forceDelete,omitempty"`
}

// ExternalClusterAPIDrainNodeJSONBody defines parameters for ExternalClusterAPIDrainNode.
type ExternalClusterAPIDrainNodeJSONBody = ExternalclusterV1DrainConfig

// ExternalClusterAPIReconcileClusterParams defines parameters for ExternalClusterAPIReconcileCluster.
type ExternalClusterAPIReconcileClusterParams struct {
	// Whether to skip AKS refresh of instance-template.
	SkipAksInitData *bool `form:"skipAksInitData,omitempty" json:"skipAksInitData,omitempty"`
}

// ExternalClusterAPITriggerResumeClusterJSONBody defines parameters for ExternalClusterAPITriggerResumeCluster.
type ExternalClusterAPITriggerResumeClusterJSONBody = ExternalclusterV1NodeConfig

// ExternalClusterAPIUpdateClusterTagsJSONBody defines parameters for ExternalClusterAPIUpdateClusterTags.
type ExternalClusterAPIUpdateClusterTagsJSONBody struct {
	AdditionalProperties map[string]string `json:"-"`
}

// ExternalClusterAPIGetCredentialsScriptTemplateParams defines parameters for ExternalClusterAPIGetCredentialsScriptTemplate.
type ExternalClusterAPIGetCredentialsScriptTemplateParams struct {
	CrossRole *bool `form:"crossRole,omitempty" json:"crossRole,omitempty"`
}

// AuthTokenAPICreateAuthTokenJSONRequestBody defines body for AuthTokenAPICreateAuthToken for application/json ContentType.
type AuthTokenAPICreateAuthTokenJSONRequestBody = AuthTokenAPICreateAuthTokenJSONBody

// AuthTokenAPIUpdateAuthTokenJSONRequestBody defines body for AuthTokenAPIUpdateAuthToken for application/json ContentType.
type AuthTokenAPIUpdateAuthTokenJSONRequestBody = AuthTokenAPIUpdateAuthTokenJSONBody

// AutoscalerAPIMigrateKarpenterDefinitionsJSONRequestBody defines body for AutoscalerAPIMigrateKarpenterDefinitions for application/json ContentType.
type AutoscalerAPIMigrateKarpenterDefinitionsJSONRequestBody = AutoscalerAPIMigrateKarpenterDefinitionsJSONBody

// AutoscalerAPIGenerateRebalancingPlanJSONRequestBody defines body for AutoscalerAPIGenerateRebalancingPlan for application/json ContentType.
type AutoscalerAPIGenerateRebalancingPlanJSONRequestBody = AutoscalerAPIGenerateRebalancingPlanJSONBody

// ExternalClusterAPIRegisterClusterJSONRequestBody defines body for ExternalClusterAPIRegisterCluster for application/json ContentType.
type ExternalClusterAPIRegisterClusterJSONRequestBody = ExternalClusterAPIRegisterClusterJSONBody

// ExternalClusterAPIUpdateClusterJSONRequestBody defines body for ExternalClusterAPIUpdateCluster for application/json ContentType.
type ExternalClusterAPIUpdateClusterJSONRequestBody = ExternalClusterAPIUpdateClusterJSONBody

// ExternalClusterAPIDisconnectClusterJSONRequestBody defines body for ExternalClusterAPIDisconnectCluster for application/json ContentType.
type ExternalClusterAPIDisconnectClusterJSONRequestBody = ExternalClusterAPIDisconnectClusterJSONBody

// ExternalClusterAPIHandleCloudEventJSONRequestBody defines body for ExternalClusterAPIHandleCloudEvent for application/json ContentType.
type ExternalClusterAPIHandleCloudEventJSONRequestBody = ExternalClusterAPIHandleCloudEventJSONBody

// ExternalClusterAPIGCPCreateSAJSONRequestBody defines body for ExternalClusterAPIGCPCreateSA for application/json ContentType.
type ExternalClusterAPIGCPCreateSAJSONRequestBody = ExternalClusterAPIGCPCreateSAJSONBody

// ExternalClusterAPIGKECreateSAJSONRequestBody defines body for ExternalClusterAPIGKECreateSA for application/json ContentType.
type ExternalClusterAPIGKECreateSAJSONRequestBody = ExternalClusterAPIGKECreateSAJSONBody

// ExternalClusterAPIAddNodeJSONRequestBody defines body for ExternalClusterAPIAddNode for application/json ContentType.
type ExternalClusterAPIAddNodeJSONRequestBody = ExternalClusterAPIAddNodeJSONBody

// ExternalClusterAPIDrainNodeJSONRequestBody defines body for ExternalClusterAPIDrainNode for application/json ContentType.
type ExternalClusterAPIDrainNodeJSONRequestBody = ExternalClusterAPIDrainNodeJSONBody

// ExternalClusterAPITriggerResumeClusterJSONRequestBody defines body for ExternalClusterAPITriggerResumeCluster for application/json ContentType.
type ExternalClusterAPITriggerResumeClusterJSONRequestBody = ExternalClusterAPITriggerResumeClusterJSONBody

// ExternalClusterAPIUpdateClusterTagsJSONRequestBody defines body for ExternalClusterAPIUpdateClusterTags for application/json ContentType.
type ExternalClusterAPIUpdateClusterTagsJSONRequestBody ExternalClusterAPIUpdateClusterTagsJSONBody

// Getter for additional properties for ExternalClusterAPIUpdateClusterTagsJSONBody. Returns the specified
// element and whether it was found
func (a ExternalClusterAPIUpdateClusterTagsJSONBody) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalClusterAPIUpdateClusterTagsJSONBody
func (a *ExternalClusterAPIUpdateClusterTagsJSONBody) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalClusterAPIUpdateClusterTagsJSONBody to handle AdditionalProperties
func (a *ExternalClusterAPIUpdateClusterTagsJSONBody) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalClusterAPIUpdateClusterTagsJSONBody to handle AdditionalProperties
func (a ExternalClusterAPIUpdateClusterTagsJSONBody) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels. Returns the specified
// element and whether it was found
func (a CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels
func (a *CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels to handle AdditionalProperties
func (a *CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels to handle AdditionalProperties
func (a CastaiAutoscalerV1beta1GetRebalancedWorkloadsResponseLabelSelector_MatchLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Cluster_Tags. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Cluster_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Cluster_Tags
func (a *ExternalclusterV1Cluster_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Cluster_Tags to handle AdditionalProperties
func (a *ExternalclusterV1Cluster_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Cluster_Tags to handle AdditionalProperties
func (a ExternalclusterV1Cluster_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1EKSClusterParams_Tags. Returns the specified
// element and whether it was found
func (a ExternalclusterV1EKSClusterParams_Tags) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1EKSClusterParams_Tags
func (a *ExternalclusterV1EKSClusterParams_Tags) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1EKSClusterParams_Tags to handle AdditionalProperties
func (a *ExternalclusterV1EKSClusterParams_Tags) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1EKSClusterParams_Tags to handle AdditionalProperties
func (a ExternalclusterV1EKSClusterParams_Tags) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_Annotations. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_Annotations) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_Annotations
func (a *ExternalclusterV1Node_Annotations) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_Annotations to handle AdditionalProperties
func (a *ExternalclusterV1Node_Annotations) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_Annotations to handle AdditionalProperties
func (a ExternalclusterV1Node_Annotations) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_InstanceLabels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_InstanceLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_InstanceLabels
func (a *ExternalclusterV1Node_InstanceLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_InstanceLabels to handle AdditionalProperties
func (a *ExternalclusterV1Node_InstanceLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_InstanceLabels to handle AdditionalProperties
func (a ExternalclusterV1Node_InstanceLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1Node_Labels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1Node_Labels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1Node_Labels
func (a *ExternalclusterV1Node_Labels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1Node_Labels to handle AdditionalProperties
func (a *ExternalclusterV1Node_Labels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1Node_Labels to handle AdditionalProperties
func (a ExternalclusterV1Node_Labels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ExternalclusterV1NodeConfig_KubernetesLabels. Returns the specified
// element and whether it was found
func (a ExternalclusterV1NodeConfig_KubernetesLabels) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ExternalclusterV1NodeConfig_KubernetesLabels
func (a *ExternalclusterV1NodeConfig_KubernetesLabels) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ExternalclusterV1NodeConfig_KubernetesLabels to handle AdditionalProperties
func (a *ExternalclusterV1NodeConfig_KubernetesLabels) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ExternalclusterV1NodeConfig_KubernetesLabels to handle AdditionalProperties
func (a ExternalclusterV1NodeConfig_KubernetesLabels) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
