// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/castai/cluster-controller/castai (interfaces: LogSender)

// Package mock_castai is a generated GoMock package.
package mock_castai

import (
	"context"
	"reflect"

	"github.com/castai/cluster-controller/internal/castai"
	"github.com/golang/mock/gomock"
)

// MockLogSender is a mock of LogSender interface.
type MockLogSender struct {
	ctrl     *gomock.Controller
	recorder *MockLogSenderMockRecorder
}

// MockLogSenderMockRecorder is the mock recorder for MockLogSender.
type MockLogSenderMockRecorder struct {
	mock *MockLogSender
}

// NewMockLogSender creates a new mock instance.
func NewMockLogSender(ctrl *gomock.Controller) *MockLogSender {
	mock := &MockLogSender{ctrl: ctrl}
	mock.recorder = &MockLogSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogSender) EXPECT() *MockLogSenderMockRecorder {
	return m.recorder
}

// SendLog mocks base method.
func (m *MockLogSender) SendLog(arg0 context.Context, arg1 *castai.LogEntry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendLog", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendLog indicates an expected call of SendLog.
func (mr *MockLogSenderMockRecorder) SendLog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendLog", reflect.TypeOf((*MockLogSender)(nil).SendLog), arg0, arg1)
}
